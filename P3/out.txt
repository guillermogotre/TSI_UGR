fixme:ntdll:NtSetInformationToken unimplemented class 4
fixme:advapi:ImpersonateLoggedOnUser ((nil))

(*** 1 ***) Initializating planning process...
(*** 1 ***) Initializating python...
(***) Using AC3
(*** 1 ***) Depth: 1
(*** 1 ***) Plan size: 0
(*** 1 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 1 ***) Expanding: [0] (goal-task)

(*** 1 ***) Selecting a candidate task.
(*** 1 ***) Found: 1 candidates (left).
      [0] :task (goal-task)
(*** 1 ***) Selecting a method to expand from compound task.
      :task (goal-task)
(*** 1 ***) Found: 1 methods to expand (left).
      [0] 
      (:method Config
      :precondition
      ( )
      :tasks (
         (add-destination-counter)
         (travel-planner)
      )
      )
(*** 1 ***) Expanding method: Config
(*** 1 ***) Working in task:
(:task goal-task
   :parameters ()
   (:method Config
   :precondition
   ( )
   :tasks (
      (add-destination-counter)
      (travel-planner)
   )
   )
)

(*** 1 ***) Using method: Config
(*** 1 ***) No preconditions.
(ccc) Creating new agenda:
 [1,0]

(*** 2 ***) Depth: 2
(*** 2 ***) Plan size: 0
(*** 2 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 2 ***) Expanding: [1] (add-destination-counter)

(*** 2 ***) Selecting a candidate task.
(*** 2 ***) Found: 1 candidates (left).
      [0] :action (add-destination-counter)
(*** 2 ***) Solving action:
(:action add-destination-counter
 :parameters ()
 :precondition
   (destino ?tp ?tc)
 :effect
   (and
      (forall ( ?a - aircraft ?c - city) 
         (when 
             ()
            (assign               (onboard-to ?a ?c)               0            )
         )      )
      (forall ( ?a - aircraft) 
         (when 
             ()
            (and
               (board-stage-pending ?a)
               (max-to ?a ?tc)
            )

         )      )
   )

)
(*** 2 ***) working in action:
(:action add-destination-counter
 :parameters ()
 :precondition
   (destino ?tp ?tc)
 :effect
   (and
      (forall ( ?a - aircraft ?c - city) 
         (when 
             ()
            (assign               (onboard-to ?a ?c)               0            )
         )      )
      (forall ( ?a - aircraft) 
         (when 
             ()
            (and
               (board-stage-pending ?a)
               (max-to ?a ?tc)
            )

         )      )
   )

)

(*** 2 ***) Found: 3 unification(s) (left). 
Unification [0]:
?tc <- granada
?tp <- p1
2 variable subtition(s).

Unification [1]:
?tc <- sevilla
?tp <- p2
2 variable subtition(s).

Unification [2]:
?tc <- sevilla
?tp <- p3
2 variable subtition(s).

(ccc) Performing unification: 
?tc <- granada
?tp <- p1
2 variable subtition(s).

(*** 2 ***) Saving Simple Temporal Network: 2
(ccc) Added to state: (= (onboard-to a1 almeria)0 )
(ccc) Changing value: (= (onboard-to a1 almeria)0 )
(ccc) Added to state: (= (onboard-to a1 granada)0 )
(ccc) Changing value: (= (onboard-to a1 granada)0 )
(ccc) Added to state: (= (onboard-to a1 madrid)0 )
(ccc) Changing value: (= (onboard-to a1 madrid)0 )
(ccc) Added to state: (= (onboard-to a1 sevilla)0 )
(ccc) Changing value: (= (onboard-to a1 sevilla)0 )
(ccc) Added to state: (= (onboard-to a2 almeria)0 )
(ccc) Changing value: (= (onboard-to a2 almeria)0 )
(ccc) Added to state: (= (onboard-to a2 granada)0 )
(ccc) Changing value: (= (onboard-to a2 granada)0 )
(ccc) Added to state: (= (onboard-to a2 madrid)0 )
(ccc) Changing value: (= (onboard-to a2 madrid)0 )
(ccc) Added to state: (= (onboard-to a2 sevilla)0 )
(ccc) Changing value: (= (onboard-to a2 sevilla)0 )
(ccc) Added to state: (board-stage-pending a1)
(ccc) Added to state: (max-to a1 granada)
(ccc) Added to state: (board-stage-pending a2)
(ccc) Added to state: (max-to a2 granada)
(ccc) onboard-to was produced by: add-destination-counter
(ccc) onboard-to was produced by: add-destination-counter
(ccc) onboard-to was produced by: add-destination-counter
(ccc) onboard-to was produced by: add-destination-counter
(ccc) onboard-to was produced by: add-destination-counter
(ccc) onboard-to was produced by: add-destination-counter
(ccc) onboard-to was produced by: add-destination-counter
(ccc) onboard-to was produced by: add-destination-counter
(ccc) Creating new agenda:
 [2,0]

(*** 3 ***) Depth: 3
(*** 3 ***) Plan size: 1
(*** 3 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 3 ***) Expanding: [2] (travel-planner)

(*** 3 ***) Selecting a candidate task.
(*** 3 ***) Found: 1 candidates (left).
      [0] :task (travel-planner)
(*** 3 ***) Selecting a method to expand from compound task.
      :task (travel-planner)
(*** 3 ***) Found: 2 methods to expand (left).
      [0] 
      (:method Case1
      :precondition
            (and
               (destino ?p - person ?c - city)
            )

      :tasks (
         (board-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 3 ***) Expanding method: Case1
(*** 3 ***) Working in task:
(:task travel-planner
   :parameters ()
   (:method Case1
   :precondition
         (and
            (destino ?p - person ?c - city)
         )

   :tasks (
      (board-stage)
   )
   )
   (:method Base
   :precondition
   ( )
   :tasks (
      (:inline () ())
   )
   )
)

(*** 3 ***) Using method: Case1
(*** 3 ***) Found: 3 unification(s) (left). 
Unification [0]:
?c <- granada
?p <- p1
2 variable subtition(s).

Unification [1]:
?c <- sevilla
?p <- p2
2 variable subtition(s).

Unification [2]:
?c <- sevilla
?p <- p3
2 variable subtition(s).

(ccc) Performing unification: 
?c <- granada
?p <- p1
2 variable subtition(s).

(ccc) Creating new agenda:
 [4,0]

(*** 4 ***) Depth: 4
(*** 4 ***) Plan size: 1
(*** 4 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 4 ***) Expanding: [4] (board-stage)

(*** 4 ***) Selecting a candidate task.
(*** 4 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 4 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 4 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 4 ***) Expanding method: Seats-left
(### 4 ###) FAIL!!: No unifications.
(*** 4 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 4 ***) Found: 2 methods to expand (left).
      [0] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 4 ***) Expanding method: No-seats-left-priority
(### 4 ###) FAIL!!: No unifications.
(*** 4 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 4 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 4 ***) Expanding method: base
(*** 4 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 4 ***) Using method: base
(*** 4 ***) Found: 2 unification(s) (left). 
Unification [0]:
?a <- a1
1 variable subtition(s).

Unification [1]:
?a <- a2
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a1
1 variable subtition(s).

(ccc) Creating new agenda:
 [5,0]

(*** 5 ***) Depth: 5
(*** 5 ***) Plan size: 1
(*** 5 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 5 ***) Selecting a candidate task.
(*** 5 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 5 ***) Solving action:
(:inline ()
   (and
      (not (board-stage-pending a1))
      (fly-stage-pending a1)
   )

) 
(*** 5 ***) working in action:
(:inline ()
   (and
      (not (board-stage-pending a1))
      (fly-stage-pending a1)
   )

) 

(*** 5 ***) No preconditions.
(ccc) Deleted from state: (board-stage-pending a1)
(ccc) Added to state: (fly-stage-pending a1)
(ccc) Added to state: (not (board-stage-pending a1))
(ccc) Creating new agenda:
 [6,0]

(*** 6 ***) Depth: 6
(*** 6 ***) Plan size: 2
(*** 6 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 6 ***) Expanding: [6] (fly-stage)

(*** 6 ***) Selecting a candidate task.
(*** 6 ***) Found: 1 candidates (left).
      [0] :task (fly-stage)
(*** 6 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 6 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Indirect-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (> (board-limit ?a) 0)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (destino ?p - person ?c3 - city)
               (> (onboard-to ?a ?c3) 0)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [2] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 6 ***) Expanding method: Indirect-flight
(### 6 ###) FAIL!!: No unifications.
(*** 6 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 6 ***) Found: 2 methods to expand (left).
      [0] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [1] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 6 ***) Expanding method: Direct-flight
(### 6 ###) FAIL!!: No unifications.
(*** 6 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 6 ***) Found: 1 methods to expand (left).
      [0] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 6 ***) Expanding method: Empty-plane
(*** 6 ***) Working in task:
(:task fly-stage
   :parameters ()
   (:method Indirect-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (> (board-limit ?a) 0)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (destino ?p - person ?c3 - city)
            (> (onboard-to ?a ?c3) 0)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method Direct-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (in ?tp - person ?a - aircraft)
         )

   :tasks (
      (calc-max-destination ?a)
      (fly-max ?a)
   )
   )
   (:method Empty-plane
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 6 ***) Using method: Empty-plane
(*** 6 ***) Found: 3 unification(s) (left). 
Unification [0]:
?c2 <- almeria
?p <- p1
?c1 <- sevilla
?a <- a1
4 variable subtition(s).

Unification [1]:
?c2 <- almeria
?p <- p2
?c1 <- sevilla
?a <- a1
4 variable subtition(s).

Unification [2]:
?c2 <- almeria
?p <- p3
?c1 <- sevilla
?a <- a1
4 variable subtition(s).

(ccc) Performing unification: 
?c2 <- almeria
?p <- p1
?c1 <- sevilla
?a <- a1
4 variable subtition(s).

(ccc) Creating new agenda:
 [8,0]

(*** 7 ***) Depth: 7
(*** 7 ***) Plan size: 2
(*** 7 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 7 ***) Expanding: [8] (mover-avion a1 sevilla almeria)

(*** 7 ***) Selecting a candidate task.
(*** 7 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 7 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 7 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 7 ***) Expanding method: fuel-suficiente-fast
(### 7 ###) FAIL!!: No unifications.
(*** 7 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 7 ***) Found: 3 methods to expand (left).
      [0] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 7 ***) Expanding method: fuel-insuficiente-fast
(*** 7 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a1 sevilla almeria)
            (llega-fast a1 sevilla almeria)
         )

   :tasks (
      (zoom a1 sevilla almeria)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast a1 sevilla almeria)
         )

   :tasks (
      (refuel a1 sevilla)
      (mover-avion a1 sevilla almeria)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 7 ***) Using method: fuel-insuficiente-fast
(*** 7 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [11,0]

(*** 8 ***) Depth: 8
(*** 8 ***) Plan size: 2
(*** 8 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 8 ***) Expanding: [11] (refuel a1 sevilla)

(*** 8 ***) Selecting a candidate task.
(*** 8 ***) Found: 1 candidates (left).
      [0] :action (refuel a1 sevilla)
(*** 8 ***) Solving action:
(:durative-action refuel
 :parameters ( a1 sevilla)
 :duration (= ?duration (/ (- (capacity a1) (fuel a1)) (refuel-rate a1)))
 :condition
   (and
      (> (capacity a1) (fuel a1))
      (at a1 sevilla)
   )

 :effect
   (assign      (fuel a1)      (capacity a1)   )
)
(*** 8 ***) working in action:
(:durative-action refuel
 :parameters ( a1 sevilla)
 :duration (= ?duration (/ (- (capacity a1) (fuel a1)) (refuel-rate a1)))
 :condition
   (and
      (> (capacity a1) (fuel a1))
      (at a1 sevilla)
   )

 :effect
   (assign      (fuel a1)      (capacity a1)   )
)

(*** 8 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 8 ***) Saving Simple Temporal Network: 3
(ccc) Changing value: (= (fuel a1)1100 )
(ccc) fuel was produced by: initial state
(ccc) Creating new agenda:
 [12,0]

(*** 9 ***) Depth: 9
(*** 9 ***) Plan size: 3
(*** 9 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 9 ***) Expanding: [12] (mover-avion a1 sevilla almeria)

(*** 9 ***) Selecting a candidate task.
(*** 9 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 9 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 9 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 9 ***) Expanding method: fuel-suficiente-fast
(*** 9 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a1 sevilla almeria)
            (llega-fast a1 sevilla almeria)
         )

   :tasks (
      (zoom a1 sevilla almeria)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 9 ***) Using method: fuel-suficiente-fast
(*** 9 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [14,0]

(*** 10 ***) Depth: 10
(*** 10 ***) Plan size: 3
(*** 10 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 10 ***) Expanding: [14] (zoom a1 sevilla almeria)

(*** 10 ***) Selecting a candidate task.
(*** 10 ***) Found: 1 candidates (left).
      [0] :action (zoom a1 sevilla almeria)
(*** 10 ***) Solving action:
(:durative-action zoom
 :parameters ( a1 sevilla almeria)
 :duration (= ?duration (/ (distance sevilla almeria) (fast-speed a1)))
 :condition
   (and
      (at a1 sevilla)
      (>= (fuel a1) (* (distance sevilla almeria) (fast-burn a1)))
   )

 :effect
   (and
      (not (at a1 sevilla))
      (at a1 almeria)
      (increase         (total-fuel-used a1)         (* (distance sevilla almeria) (fast-burn a1))      )
      (decrease         (fuel a1)         (* (distance sevilla almeria) (fast-burn a1))      )
   )

)
(*** 10 ***) working in action:
(:durative-action zoom
 :parameters ( a1 sevilla almeria)
 :duration (= ?duration (/ (distance sevilla almeria) (fast-speed a1)))
 :condition
   (and
      (at a1 sevilla)
      (>= (fuel a1) (* (distance sevilla almeria) (fast-burn a1)))
   )

 :effect
   (and
      (not (at a1 sevilla))
      (at a1 almeria)
      (increase         (total-fuel-used a1)         (* (distance sevilla almeria) (fast-burn a1))      )
      (decrease         (fuel a1)         (* (distance sevilla almeria) (fast-burn a1))      )
   )

)

(*** 10 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 10 ***) Saving Simple Temporal Network: 4
(ccc) Deleted from state: (at a1 sevilla)
(ccc) Added to state: (at a1 almeria)
(ccc) Changing value: (= (total-fuel-used a1)820 )
(ccc) Changing value: (= (fuel a1)280 )
(ccc) Added to state: (not (at a1 sevilla))
(ccc) total-fuel-used was produced by: initial state
(ccc) fuel was produced by: refuel
(ccc) Creating new agenda:
 [9,0]

(*** 11 ***) Depth: 11
(*** 11 ***) Plan size: 4
(*** 11 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 11 ***) Selecting a candidate task.
(*** 11 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 11 ***) Solving action:
(:inline ()
   (and
      (pending p1)
      (not (fly-stage-pending a1))
      (debark-stage-pending a1)
   )

) 
(*** 11 ***) working in action:
(:inline ()
   (and
      (pending p1)
      (not (fly-stage-pending a1))
      (debark-stage-pending a1)
   )

) 

(*** 11 ***) No preconditions.
(ccc) Added to state: (pending p1)
(ccc) Deleted from state: (fly-stage-pending a1)
(ccc) Added to state: (debark-stage-pending a1)
(ccc) Added to state: (not (fly-stage-pending a1))
(ccc) Creating new agenda:
 [10,0]

(*** 12 ***) Depth: 12
(*** 12 ***) Plan size: 5
(*** 12 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 12 ***) Expanding: [10] (debark-stage)

(*** 12 ***) Selecting a candidate task.
(*** 12 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 12 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 12 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 12 ***) Expanding method: At-destination
(### 12 ###) FAIL!!: No unifications.
(*** 12 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 12 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 12 ***) Expanding method: Base
(*** 12 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 12 ***) Using method: Base
(*** 12 ***) Found: 1 unification(s) (left). 
Unification [0]:
?a <- a1
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a1
1 variable subtition(s).

(ccc) Creating new agenda:
 [17,0]

(*** 13 ***) Depth: 13
(*** 13 ***) Plan size: 5
(*** 13 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 13 ***) Selecting a candidate task.
(*** 13 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 13 ***) Solving action:
(:inline ()
   (and
      (not (debark-stage-pending a1))
      (board-stage-pending a1)
   )

) 
(*** 13 ***) working in action:
(:inline ()
   (and
      (not (debark-stage-pending a1))
      (board-stage-pending a1)
   )

) 

(*** 13 ***) No preconditions.
(ccc) Deleted from state: (debark-stage-pending a1)
(ccc) Added to state: (board-stage-pending a1)
(ccc) Added to state: (not (debark-stage-pending a1))
(ccc) Creating new agenda:
 [18,0]

(*** 14 ***) Depth: 14
(*** 14 ***) Plan size: 6
(*** 14 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 14 ***) Expanding: [18] (debark-stage)

(*** 14 ***) Selecting a candidate task.
(*** 14 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 14 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 14 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 14 ***) Expanding method: At-destination
(### 14 ###) FAIL!!: No unifications.
(*** 14 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 14 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 14 ***) Expanding method: Base
(### 14 ###) FAIL!!: No unifications.
(*** 14 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 14 ***) Found: 2 methods to expand (left).
      [0] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [1] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 14 ***) Expanding method: continue
(*** 14 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 14 ***) Using method: continue
(*** 14 ***) Found: 3 unification(s) (left). 
Unification [0]:
?c <- granada
?p <- p1
2 variable subtition(s).

Unification [1]:
?c <- sevilla
?p <- p2
2 variable subtition(s).

Unification [2]:
?c <- sevilla
?p <- p3
2 variable subtition(s).

(ccc) Performing unification: 
?c <- granada
?p <- p1
2 variable subtition(s).

(ccc) Creating new agenda:
 [20,0]

(*** 15 ***) Depth: 15
(*** 15 ***) Plan size: 6
(*** 15 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 15 ***) Expanding: [20] (board-stage)

(*** 15 ***) Selecting a candidate task.
(*** 15 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 15 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 15 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 15 ***) Expanding method: Seats-left
(*** 15 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 15 ***) Using method: Seats-left
(*** 15 ***) Found: 3 unification(s) (left). 
Unification [0]:
?c2 <- granada
?p <- p1
?c <- almeria
?a <- a1
4 variable subtition(s).

Unification [1]:
?c2 <- sevilla
?p <- p2
?c <- almeria
?a <- a1
4 variable subtition(s).

Unification [2]:
?c2 <- sevilla
?p <- p3
?c <- almeria
?a <- a1
4 variable subtition(s).

(ccc) Performing unification: 
?c2 <- granada
?p <- p1
?c <- almeria
?a <- a1
4 variable subtition(s).

(ccc) Creating new agenda:
 [21,0]

(*** 16 ***) Depth: 16
(*** 16 ***) Plan size: 6
(*** 16 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 16 ***) Expanding: [21] (board p1 a1 almeria)

(*** 16 ***) Selecting a candidate task.
(*** 16 ***) Found: 1 candidates (left).
      [0] :action (board p1 a1 almeria)
(*** 16 ***) Solving action:
(:durative-action board
 :parameters ( p1 a1 almeria)
 :duration (= ?duration (boarding-time))
 :condition
   (and
      (at p1 almeria)
      (at a1 almeria)
      (> (board-limit a1) 0)
   )

 :effect
   (and
      (not (at p1 almeria))
      (in p1 a1)
      (decrease         (board-limit a1)         1      )
   )

)
(*** 16 ***) working in action:
(:durative-action board
 :parameters ( p1 a1 almeria)
 :duration (= ?duration (boarding-time))
 :condition
   (and
      (at p1 almeria)
      (at a1 almeria)
      (> (board-limit a1) 0)
   )

 :effect
   (and
      (not (at p1 almeria))
      (in p1 a1)
      (decrease         (board-limit a1)         1      )
   )

)

(*** 16 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 16 ***) Saving Simple Temporal Network: 5
(ccc) Deleted from state: (at p1 almeria)
(ccc) Added to state: (in p1 a1)
(ccc) Changing value: (= (board-limit a1)1 )
(ccc) Added to state: (not (at p1 almeria))
(ccc) board-limit was produced by: initial state
(ccc) Creating new agenda:
 [22,0]

(*** 17 ***) Depth: 17
(*** 17 ***) Plan size: 7
(*** 17 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 17 ***) Selecting a candidate task.
(*** 17 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 17 ***) Solving action:
(:inline ()
   (and
      (increase         (onboard-to a1 granada)         1      )
      (not (pending p1))
   )

) 
(*** 17 ***) working in action:
(:inline ()
   (and
      (increase         (onboard-to a1 granada)         1      )
      (not (pending p1))
   )

) 

(*** 17 ***) No preconditions.
(ccc) Changing value: (= (onboard-to a1 granada)1 )
(ccc) Deleted from state: (pending p1)
(ccc) Added to state: (not (pending p1))
(ccc) onboard-to was produced by: add-destination-counter
(ccc) Creating new agenda:
 [23,0]

(*** 18 ***) Depth: 18
(*** 18 ***) Plan size: 8
(*** 18 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 18 ***) Expanding: [23] (board-stage)

(*** 18 ***) Selecting a candidate task.
(*** 18 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 18 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 18 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 18 ***) Expanding method: Seats-left
(*** 18 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 18 ***) Using method: Seats-left
(*** 18 ***) Found: 2 unification(s) (left). 
Unification [0]:
?c2 <- sevilla
?p <- p2
?c <- almeria
?a <- a1
4 variable subtition(s).

Unification [1]:
?c2 <- sevilla
?p <- p3
?c <- almeria
?a <- a1
4 variable subtition(s).

(ccc) Performing unification: 
?c2 <- sevilla
?p <- p2
?c <- almeria
?a <- a1
4 variable subtition(s).

(ccc) Creating new agenda:
 [26,0]

(*** 19 ***) Depth: 19
(*** 19 ***) Plan size: 8
(*** 19 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 19 ***) Expanding: [26] (board p2 a1 almeria)

(*** 19 ***) Selecting a candidate task.
(*** 19 ***) Found: 1 candidates (left).
      [0] :action (board p2 a1 almeria)
(*** 19 ***) Solving action:
(:durative-action board
 :parameters ( p2 a1 almeria)
 :duration (= ?duration (boarding-time))
 :condition
   (and
      (at p2 almeria)
      (at a1 almeria)
      (> (board-limit a1) 0)
   )

 :effect
   (and
      (not (at p2 almeria))
      (in p2 a1)
      (decrease         (board-limit a1)         1      )
   )

)
(*** 19 ***) working in action:
(:durative-action board
 :parameters ( p2 a1 almeria)
 :duration (= ?duration (boarding-time))
 :condition
   (and
      (at p2 almeria)
      (at a1 almeria)
      (> (board-limit a1) 0)
   )

 :effect
   (and
      (not (at p2 almeria))
      (in p2 a1)
      (decrease         (board-limit a1)         1      )
   )

)

(*** 19 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 19 ***) Saving Simple Temporal Network: 6
(ccc) Deleted from state: (at p2 almeria)
(ccc) Added to state: (in p2 a1)
(ccc) Changing value: (= (board-limit a1)0 )
(ccc) Added to state: (not (at p2 almeria))
(ccc) board-limit was produced by: board
(ccc) Creating new agenda:
 [27,0]

(*** 20 ***) Depth: 20
(*** 20 ***) Plan size: 9
(*** 20 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 20 ***) Selecting a candidate task.
(*** 20 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 20 ***) Solving action:
(:inline ()
   (and
      (increase         (onboard-to a1 sevilla)         1      )
      (not (pending p2))
   )

) 
(*** 20 ***) working in action:
(:inline ()
   (and
      (increase         (onboard-to a1 sevilla)         1      )
      (not (pending p2))
   )

) 

(*** 20 ***) No preconditions.
(ccc) Changing value: (= (onboard-to a1 sevilla)1 )
(ccc) onboard-to was produced by: add-destination-counter
(ccc) Creating new agenda:
 [28,0]

(*** 21 ***) Depth: 21
(*** 21 ***) Plan size: 10
(*** 21 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 21 ***) Expanding: [28] (board-stage)

(*** 21 ***) Selecting a candidate task.
(*** 21 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 21 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 21 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 21 ***) Expanding method: Seats-left
(### 21 ###) FAIL!!: No unifications.
(*** 21 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 21 ***) Found: 2 methods to expand (left).
      [0] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 21 ***) Expanding method: No-seats-left-priority
(### 21 ###) FAIL!!: No unifications.
(*** 21 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 21 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 21 ***) Expanding method: base
(*** 21 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 21 ***) Using method: base
(*** 21 ***) Found: 2 unification(s) (left). 
Unification [0]:
?a <- a2
1 variable subtition(s).

Unification [1]:
?a <- a1
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a2
1 variable subtition(s).

(ccc) Creating new agenda:
 [31,0]

(*** 22 ***) Depth: 22
(*** 22 ***) Plan size: 10
(*** 22 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 22 ***) Selecting a candidate task.
(*** 22 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 22 ***) Solving action:
(:inline ()
   (and
      (not (board-stage-pending a2))
      (fly-stage-pending a2)
   )

) 
(*** 22 ***) working in action:
(:inline ()
   (and
      (not (board-stage-pending a2))
      (fly-stage-pending a2)
   )

) 

(*** 22 ***) No preconditions.
(ccc) Deleted from state: (board-stage-pending a2)
(ccc) Added to state: (fly-stage-pending a2)
(ccc) Added to state: (not (board-stage-pending a2))
(ccc) Creating new agenda:
 [32,0]

(*** 23 ***) Depth: 23
(*** 23 ***) Plan size: 11
(*** 23 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 23 ***) Expanding: [32] (fly-stage)

(*** 23 ***) Selecting a candidate task.
(*** 23 ***) Found: 1 candidates (left).
      [0] :task (fly-stage)
(*** 23 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 23 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Indirect-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (> (board-limit ?a) 0)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (destino ?p - person ?c3 - city)
               (> (onboard-to ?a ?c3) 0)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [2] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 23 ***) Expanding method: Indirect-flight
(### 23 ###) FAIL!!: No unifications.
(*** 23 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 23 ***) Found: 2 methods to expand (left).
      [0] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [1] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 23 ***) Expanding method: Direct-flight
(### 23 ###) FAIL!!: No unifications.
(*** 23 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 23 ***) Found: 1 methods to expand (left).
      [0] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 23 ***) Expanding method: Empty-plane
(*** 23 ***) Working in task:
(:task fly-stage
   :parameters ()
   (:method Indirect-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (> (board-limit ?a) 0)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (destino ?p - person ?c3 - city)
            (> (onboard-to ?a ?c3) 0)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method Direct-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (in ?tp - person ?a - aircraft)
         )

   :tasks (
      (calc-max-destination ?a)
      (fly-max ?a)
   )
   )
   (:method Empty-plane
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 23 ***) Using method: Empty-plane
(*** 23 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c2 <- almeria
?p <- p3
?c1 <- madrid
?a <- a2
4 variable subtition(s).

(ccc) Performing unification: 
?c2 <- almeria
?p <- p3
?c1 <- madrid
?a <- a2
4 variable subtition(s).

(ccc) Creating new agenda:
 [34,0]

(*** 24 ***) Depth: 24
(*** 24 ***) Plan size: 11
(*** 24 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 24 ***) Expanding: [34] (mover-avion a2 madrid almeria)

(*** 24 ***) Selecting a candidate task.
(*** 24 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 24 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 24 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 24 ***) Expanding method: fuel-suficiente-fast
(### 24 ###) FAIL!!: No unifications.
(*** 24 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 24 ***) Found: 3 methods to expand (left).
      [0] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 24 ***) Expanding method: fuel-insuficiente-fast
(*** 24 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a2 madrid almeria)
            (llega-fast a2 madrid almeria)
         )

   :tasks (
      (zoom a2 madrid almeria)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast a2 madrid almeria)
         )

   :tasks (
      (refuel a2 madrid)
      (mover-avion a2 madrid almeria)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 24 ***) Using method: fuel-insuficiente-fast
(*** 24 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [37,0]

(*** 25 ***) Depth: 25
(*** 25 ***) Plan size: 11
(*** 25 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 25 ***) Expanding: [37] (refuel a2 madrid)

(*** 25 ***) Selecting a candidate task.
(*** 25 ***) Found: 1 candidates (left).
      [0] :action (refuel a2 madrid)
(*** 25 ***) Solving action:
(:durative-action refuel
 :parameters ( a2 madrid)
 :duration (= ?duration (/ (- (capacity a2) (fuel a2)) (refuel-rate a2)))
 :condition
   (and
      (> (capacity a2) (fuel a2))
      (at a2 madrid)
   )

 :effect
   (assign      (fuel a2)      (capacity a2)   )
)
(*** 25 ***) working in action:
(:durative-action refuel
 :parameters ( a2 madrid)
 :duration (= ?duration (/ (- (capacity a2) (fuel a2)) (refuel-rate a2)))
 :condition
   (and
      (> (capacity a2) (fuel a2))
      (at a2 madrid)
   )

 :effect
   (assign      (fuel a2)      (capacity a2)   )
)

(*** 25 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 25 ***) Saving Simple Temporal Network: 7
(ccc) Changing value: (= (fuel a2)1100 )
(ccc) fuel was produced by: initial state
(ccc) Creating new agenda:
 [38,0]

(*** 26 ***) Depth: 26
(*** 26 ***) Plan size: 12
(*** 26 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 26 ***) Expanding: [38] (mover-avion a2 madrid almeria)

(*** 26 ***) Selecting a candidate task.
(*** 26 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 26 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 26 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 26 ***) Expanding method: fuel-suficiente-fast
(*** 26 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a2 madrid almeria)
            (llega-fast a2 madrid almeria)
         )

   :tasks (
      (zoom a2 madrid almeria)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 26 ***) Using method: fuel-suficiente-fast
(*** 26 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [40,0]

(*** 27 ***) Depth: 27
(*** 27 ***) Plan size: 12
(*** 27 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 27 ***) Expanding: [40] (zoom a2 madrid almeria)

(*** 27 ***) Selecting a candidate task.
(*** 27 ***) Found: 1 candidates (left).
      [0] :action (zoom a2 madrid almeria)
(*** 27 ***) Solving action:
(:durative-action zoom
 :parameters ( a2 madrid almeria)
 :duration (= ?duration (/ (distance madrid almeria) (fast-speed a2)))
 :condition
   (and
      (at a2 madrid)
      (>= (fuel a2) (* (distance madrid almeria) (fast-burn a2)))
   )

 :effect
   (and
      (not (at a2 madrid))
      (at a2 almeria)
      (increase         (total-fuel-used a2)         (* (distance madrid almeria) (fast-burn a2))      )
      (decrease         (fuel a2)         (* (distance madrid almeria) (fast-burn a2))      )
   )

)
(*** 27 ***) working in action:
(:durative-action zoom
 :parameters ( a2 madrid almeria)
 :duration (= ?duration (/ (distance madrid almeria) (fast-speed a2)))
 :condition
   (and
      (at a2 madrid)
      (>= (fuel a2) (* (distance madrid almeria) (fast-burn a2)))
   )

 :effect
   (and
      (not (at a2 madrid))
      (at a2 almeria)
      (increase         (total-fuel-used a2)         (* (distance madrid almeria) (fast-burn a2))      )
      (decrease         (fuel a2)         (* (distance madrid almeria) (fast-burn a2))      )
   )

)

(*** 27 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 27 ***) Saving Simple Temporal Network: 8
(ccc) Deleted from state: (at a2 madrid)
(ccc) Added to state: (at a2 almeria)
(ccc) Changing value: (= (total-fuel-used a2)1094 )
(ccc) Changing value: (= (fuel a2)6 )
(ccc) Added to state: (not (at a2 madrid))
(ccc) total-fuel-used was produced by: initial state
(ccc) fuel was produced by: refuel
(ccc) Creating new agenda:
 [35,0]

(*** 28 ***) Depth: 28
(*** 28 ***) Plan size: 13
(*** 28 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 28 ***) Selecting a candidate task.
(*** 28 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 28 ***) Solving action:
(:inline ()
   (and
      (pending p3)
      (not (fly-stage-pending a2))
      (debark-stage-pending a2)
   )

) 
(*** 28 ***) working in action:
(:inline ()
   (and
      (pending p3)
      (not (fly-stage-pending a2))
      (debark-stage-pending a2)
   )

) 

(*** 28 ***) No preconditions.
(ccc) Added to state: (pending p3)
(ccc) Deleted from state: (fly-stage-pending a2)
(ccc) Added to state: (debark-stage-pending a2)
(ccc) Added to state: (not (fly-stage-pending a2))
(ccc) Creating new agenda:
 [36,0]

(*** 29 ***) Depth: 29
(*** 29 ***) Plan size: 14
(*** 29 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 29 ***) Expanding: [36] (debark-stage)

(*** 29 ***) Selecting a candidate task.
(*** 29 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 29 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 29 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 29 ***) Expanding method: At-destination
(### 29 ###) FAIL!!: No unifications.
(*** 29 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 29 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 29 ***) Expanding method: Base
(*** 29 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 29 ***) Using method: Base
(*** 29 ***) Found: 1 unification(s) (left). 
Unification [0]:
?a <- a2
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a2
1 variable subtition(s).

(ccc) Creating new agenda:
 [43,0]

(*** 30 ***) Depth: 30
(*** 30 ***) Plan size: 14
(*** 30 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 30 ***) Selecting a candidate task.
(*** 30 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 30 ***) Solving action:
(:inline ()
   (and
      (not (debark-stage-pending a2))
      (board-stage-pending a2)
   )

) 
(*** 30 ***) working in action:
(:inline ()
   (and
      (not (debark-stage-pending a2))
      (board-stage-pending a2)
   )

) 

(*** 30 ***) No preconditions.
(ccc) Deleted from state: (debark-stage-pending a2)
(ccc) Added to state: (board-stage-pending a2)
(ccc) Added to state: (not (debark-stage-pending a2))
(ccc) Creating new agenda:
 [44,0]

(*** 31 ***) Depth: 31
(*** 31 ***) Plan size: 15
(*** 31 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 31 ***) Expanding: [44] (debark-stage)

(*** 31 ***) Selecting a candidate task.
(*** 31 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 31 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 31 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 31 ***) Expanding method: At-destination
(### 31 ###) FAIL!!: No unifications.
(*** 31 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 31 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 31 ***) Expanding method: Base
(### 31 ###) FAIL!!: No unifications.
(*** 31 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 31 ***) Found: 2 methods to expand (left).
      [0] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [1] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 31 ***) Expanding method: continue
(*** 31 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 31 ***) Using method: continue
(*** 31 ***) Found: 3 unification(s) (left). 
Unification [0]:
?c <- granada
?p <- p1
2 variable subtition(s).

Unification [1]:
?c <- sevilla
?p <- p2
2 variable subtition(s).

Unification [2]:
?c <- sevilla
?p <- p3
2 variable subtition(s).

(ccc) Performing unification: 
?c <- granada
?p <- p1
2 variable subtition(s).

(ccc) Creating new agenda:
 [46,0]

(*** 32 ***) Depth: 32
(*** 32 ***) Plan size: 15
(*** 32 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 32 ***) Expanding: [46] (board-stage)

(*** 32 ***) Selecting a candidate task.
(*** 32 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 32 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 32 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 32 ***) Expanding method: Seats-left
(*** 32 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 32 ***) Using method: Seats-left
(*** 32 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c2 <- sevilla
?p <- p3
?c <- almeria
?a <- a2
4 variable subtition(s).

(ccc) Performing unification: 
?c2 <- sevilla
?p <- p3
?c <- almeria
?a <- a2
4 variable subtition(s).

(ccc) Creating new agenda:
 [47,0]

(*** 33 ***) Depth: 33
(*** 33 ***) Plan size: 15
(*** 33 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 33 ***) Expanding: [47] (board p3 a2 almeria)

(*** 33 ***) Selecting a candidate task.
(*** 33 ***) Found: 1 candidates (left).
      [0] :action (board p3 a2 almeria)
(*** 33 ***) Solving action:
(:durative-action board
 :parameters ( p3 a2 almeria)
 :duration (= ?duration (boarding-time))
 :condition
   (and
      (at p3 almeria)
      (at a2 almeria)
      (> (board-limit a2) 0)
   )

 :effect
   (and
      (not (at p3 almeria))
      (in p3 a2)
      (decrease         (board-limit a2)         1      )
   )

)
(*** 33 ***) working in action:
(:durative-action board
 :parameters ( p3 a2 almeria)
 :duration (= ?duration (boarding-time))
 :condition
   (and
      (at p3 almeria)
      (at a2 almeria)
      (> (board-limit a2) 0)
   )

 :effect
   (and
      (not (at p3 almeria))
      (in p3 a2)
      (decrease         (board-limit a2)         1      )
   )

)

(*** 33 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 33 ***) Saving Simple Temporal Network: 9
(ccc) Deleted from state: (at p3 almeria)
(ccc) Added to state: (in p3 a2)
(ccc) Changing value: (= (board-limit a2)1 )
(ccc) Added to state: (not (at p3 almeria))
(ccc) board-limit was produced by: initial state
(ccc) Creating new agenda:
 [48,0]

(*** 34 ***) Depth: 34
(*** 34 ***) Plan size: 16
(*** 34 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 34 ***) Selecting a candidate task.
(*** 34 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 34 ***) Solving action:
(:inline ()
   (and
      (increase         (onboard-to a2 sevilla)         1      )
      (not (pending p3))
   )

) 
(*** 34 ***) working in action:
(:inline ()
   (and
      (increase         (onboard-to a2 sevilla)         1      )
      (not (pending p3))
   )

) 

(*** 34 ***) No preconditions.
(ccc) Changing value: (= (onboard-to a2 sevilla)1 )
(ccc) Deleted from state: (pending p3)
(ccc) Added to state: (not (pending p3))
(ccc) onboard-to was produced by: add-destination-counter
(ccc) Creating new agenda:
 [49,0]

(*** 35 ***) Depth: 35
(*** 35 ***) Plan size: 17
(*** 35 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 35 ***) Expanding: [49] (board-stage)

(*** 35 ***) Selecting a candidate task.
(*** 35 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 35 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 35 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 35 ***) Expanding method: Seats-left
(### 35 ###) FAIL!!: No unifications.
(*** 35 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 35 ***) Found: 2 methods to expand (left).
      [0] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 35 ***) Expanding method: No-seats-left-priority
(### 35 ###) FAIL!!: No unifications.
(*** 35 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 35 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 35 ***) Expanding method: base
(*** 35 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 35 ***) Using method: base
(*** 35 ***) Found: 2 unification(s) (left). 
Unification [0]:
?a <- a1
1 variable subtition(s).

Unification [1]:
?a <- a2
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a1
1 variable subtition(s).

(ccc) Creating new agenda:
 [52,0]

(*** 36 ***) Depth: 36
(*** 36 ***) Plan size: 17
(*** 36 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 36 ***) Selecting a candidate task.
(*** 36 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 36 ***) Solving action:
(:inline ()
   (and
      (not (board-stage-pending a1))
      (fly-stage-pending a1)
   )

) 
(*** 36 ***) working in action:
(:inline ()
   (and
      (not (board-stage-pending a1))
      (fly-stage-pending a1)
   )

) 

(*** 36 ***) No preconditions.
(ccc) Deleted from state: (board-stage-pending a1)
(ccc) Added to state: (fly-stage-pending a1)
(ccc) Added to state: (not (board-stage-pending a1))
(ccc) Creating new agenda:
 [53,0]

(*** 37 ***) Depth: 37
(*** 37 ***) Plan size: 18
(*** 37 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 37 ***) Expanding: [53] (fly-stage)

(*** 37 ***) Selecting a candidate task.
(*** 37 ***) Found: 1 candidates (left).
      [0] :task (fly-stage)
(*** 37 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 37 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Indirect-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (> (board-limit ?a) 0)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (destino ?p - person ?c3 - city)
               (> (onboard-to ?a ?c3) 0)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [2] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 37 ***) Expanding method: Indirect-flight
(### 37 ###) FAIL!!: No unifications.
(*** 37 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 37 ***) Found: 2 methods to expand (left).
      [0] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [1] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 37 ***) Expanding method: Direct-flight
(*** 37 ***) Working in task:
(:task fly-stage
   :parameters ()
   (:method Indirect-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (> (board-limit ?a) 0)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (destino ?p - person ?c3 - city)
            (> (onboard-to ?a ?c3) 0)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method Direct-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (in ?tp - person ?a - aircraft)
         )

   :tasks (
      (calc-max-destination ?a)
      (fly-max ?a)
   )
   )
   (:method Empty-plane
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 37 ***) Using method: Direct-flight
(*** 37 ***) Found: 2 unification(s) (left). 
Unification [0]:
?tp <- p1
?a <- a1
2 variable subtition(s).

Unification [1]:
?tp <- p2
?a <- a1
2 variable subtition(s).

(ccc) Performing unification: 
?tp <- p1
?a <- a1
2 variable subtition(s).

(ccc) Creating new agenda:
 [55,0]

(*** 38 ***) Depth: 38
(*** 38 ***) Plan size: 18
(*** 38 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 38 ***) Expanding: [55] (calc-max-destination a1)

(*** 38 ***) Selecting a candidate task.
(*** 38 ***) Found: 1 candidates (left).
      [0] :task (calc-max-destination ?a)
(*** 38 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 38 ***) Found: 2 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (max-to ?a - aircraft ?c1 - city)
               (destino ?tp - person ?c2 - city)
               (at ?a - aircraft ?c3 - city)
               (not (= ?c1 ?c2))
               (or
                  (> (onboard-to ?a ?c2) (onboard-to ?a ?c1))
                  (= ?c1 ?c3)
               )

            )

      :tasks (
         (:inline ()
            (and
               (max-to ?a ?c2)
               (not (max-to ?a ?c1))
            )

         ) 
         (calc-max-destination ?a)
      )
      )
      [1] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 38 ***) Expanding method: m1
(### 38 ###) FAIL!!: No unifications.
(*** 38 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 38 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 38 ***) Expanding method: base
(*** 38 ***) Working in task:
(:task calc-max-destination
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (max-to a1 ?c1 - city)
            (destino ?tp - person ?c2 - city)
            (at a1 ?c3 - city)
            (not (= ?c1 ?c2))
            (or
               (> (onboard-to a1 ?c2) (onboard-to a1 ?c1))
               (= ?c1 ?c3)
            )

         )

   :tasks (
      (:inline ()
         (and
            (max-to a1 ?c2)
            (not (max-to a1 ?c1))
         )

      ) 
      (calc-max-destination a1)
   )
   )
   (:method base
   :precondition
   ( )
   :tasks (
      (:inline () ())
   )
   )
)

(*** 38 ***) Using method: base
(*** 38 ***) No preconditions.
(ccc) Creating new agenda:
 [57,0]

(*** 39 ***) Depth: 39
(*** 39 ***) Plan size: 18
(*** 39 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 39 ***) Selecting a candidate task.
(*** 39 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 39 ***) Solving action:
(:inline () ())
(*** 39 ***) working in action:
(:inline () ())

(*** 39 ***) No preconditions.
(ccc) Creating new agenda:
 [56,0]

(*** 40 ***) Depth: 40
(*** 40 ***) Plan size: 19
(*** 40 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 40 ***) Expanding: [56] (fly-max a1)

(*** 40 ***) Selecting a candidate task.
(*** 40 ***) Found: 1 candidates (left).
      [0] :task (fly-max ?a)
(*** 40 ***) Selecting a method to expand from compound task.
      :task (fly-max ?a)
(*** 40 ***) Found: 1 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (at ?a - aircraft ?c1 - city)
               (max-to ?a - aircraft ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 40 ***) Expanding method: m1
(*** 40 ***) Working in task:
(:task fly-max
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (at a1 ?c1 - city)
            (max-to a1 ?c2 - city)
            (llega-slow a1 ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion a1 ?c1 ?c2)
      (:inline ()
         (and
            (not (fly-stage-pending a1))
            (debark-stage-pending a1)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 40 ***) Using method: m1
(*** 40 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c2 <- granada
?c1 <- almeria
2 variable subtition(s).

(ccc) Performing unification: 
?c2 <- granada
?c1 <- almeria
2 variable subtition(s).

(ccc) Creating new agenda:
 [59,0]

(*** 41 ***) Depth: 41
(*** 41 ***) Plan size: 19
(*** 41 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 41 ***) Expanding: [59] (mover-avion a1 almeria granada)

(*** 41 ***) Selecting a candidate task.
(*** 41 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 41 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 41 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 41 ***) Expanding method: fuel-suficiente-fast
(### 41 ###) FAIL!!: No unifications.
(*** 41 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 41 ***) Found: 3 methods to expand (left).
      [0] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 41 ***) Expanding method: fuel-insuficiente-fast
(*** 41 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a1 almeria granada)
            (llega-fast a1 almeria granada)
         )

   :tasks (
      (zoom a1 almeria granada)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast a1 almeria granada)
         )

   :tasks (
      (refuel a1 almeria)
      (mover-avion a1 almeria granada)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 41 ***) Using method: fuel-insuficiente-fast
(*** 41 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [62,0]

(*** 42 ***) Depth: 42
(*** 42 ***) Plan size: 19
(*** 42 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 42 ***) Expanding: [62] (refuel a1 almeria)

(*** 42 ***) Selecting a candidate task.
(*** 42 ***) Found: 1 candidates (left).
      [0] :action (refuel a1 almeria)
(*** 42 ***) Solving action:
(:durative-action refuel
 :parameters ( a1 almeria)
 :duration (= ?duration (/ (- (capacity a1) (fuel a1)) (refuel-rate a1)))
 :condition
   (and
      (> (capacity a1) (fuel a1))
      (at a1 almeria)
   )

 :effect
   (assign      (fuel a1)      (capacity a1)   )
)
(*** 42 ***) working in action:
(:durative-action refuel
 :parameters ( a1 almeria)
 :duration (= ?duration (/ (- (capacity a1) (fuel a1)) (refuel-rate a1)))
 :condition
   (and
      (> (capacity a1) (fuel a1))
      (at a1 almeria)
   )

 :effect
   (assign      (fuel a1)      (capacity a1)   )
)

(*** 42 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 42 ***) Saving Simple Temporal Network: 10
(ccc) Changing value: (= (fuel a1)1100 )
(ccc) fuel was produced by: zoom
(ccc) Creating new agenda:
 [63,0]

(*** 43 ***) Depth: 43
(*** 43 ***) Plan size: 20
(*** 43 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 43 ***) Expanding: [63] (mover-avion a1 almeria granada)

(*** 43 ***) Selecting a candidate task.
(*** 43 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 43 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 43 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 43 ***) Expanding method: fuel-suficiente-fast
(*** 43 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a1 almeria granada)
            (llega-fast a1 almeria granada)
         )

   :tasks (
      (zoom a1 almeria granada)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 43 ***) Using method: fuel-suficiente-fast
(*** 43 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [65,0]

(*** 44 ***) Depth: 44
(*** 44 ***) Plan size: 20
(*** 44 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 44 ***) Expanding: [65] (zoom a1 almeria granada)

(*** 44 ***) Selecting a candidate task.
(*** 44 ***) Found: 1 candidates (left).
      [0] :action (zoom a1 almeria granada)
(*** 44 ***) Solving action:
(:durative-action zoom
 :parameters ( a1 almeria granada)
 :duration (= ?duration (/ (distance almeria granada) (fast-speed a1)))
 :condition
   (and
      (at a1 almeria)
      (>= (fuel a1) (* (distance almeria granada) (fast-burn a1)))
   )

 :effect
   (and
      (not (at a1 almeria))
      (at a1 granada)
      (increase         (total-fuel-used a1)         (* (distance almeria granada) (fast-burn a1))      )
      (decrease         (fuel a1)         (* (distance almeria granada) (fast-burn a1))      )
   )

)
(*** 44 ***) working in action:
(:durative-action zoom
 :parameters ( a1 almeria granada)
 :duration (= ?duration (/ (distance almeria granada) (fast-speed a1)))
 :condition
   (and
      (at a1 almeria)
      (>= (fuel a1) (* (distance almeria granada) (fast-burn a1)))
   )

 :effect
   (and
      (not (at a1 almeria))
      (at a1 granada)
      (increase         (total-fuel-used a1)         (* (distance almeria granada) (fast-burn a1))      )
      (decrease         (fuel a1)         (* (distance almeria granada) (fast-burn a1))      )
   )

)

(*** 44 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 44 ***) Saving Simple Temporal Network: 11
(ccc) Deleted from state: (at a1 almeria)
(ccc) Added to state: (at a1 granada)
(ccc) Changing value: (= (total-fuel-used a1)1144 )
(ccc) Changing value: (= (fuel a1)776 )
(ccc) Added to state: (not (at a1 almeria))
(ccc) total-fuel-used was produced by: zoom
(ccc) fuel was produced by: refuel
(ccc) Creating new agenda:
 [60,0]

(*** 45 ***) Depth: 45
(*** 45 ***) Plan size: 21
(*** 45 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 45 ***) Selecting a candidate task.
(*** 45 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 45 ***) Solving action:
(:inline ()
   (and
      (not (fly-stage-pending a1))
      (debark-stage-pending a1)
   )

) 
(*** 45 ***) working in action:
(:inline ()
   (and
      (not (fly-stage-pending a1))
      (debark-stage-pending a1)
   )

) 

(*** 45 ***) No preconditions.
(ccc) Deleted from state: (fly-stage-pending a1)
(ccc) Added to state: (debark-stage-pending a1)
(ccc) Added to state: (not (fly-stage-pending a1))
(ccc) Creating new agenda:
 [61,0]

(*** 46 ***) Depth: 46
(*** 46 ***) Plan size: 22
(*** 46 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 46 ***) Expanding: [61] (debark-stage)

(*** 46 ***) Selecting a candidate task.
(*** 46 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 46 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 46 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 46 ***) Expanding method: At-destination
(*** 46 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 46 ***) Using method: At-destination
(*** 46 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c <- granada
?p <- p1
?a <- a1
3 variable subtition(s).

(ccc) Performing unification: 
?c <- granada
?p <- p1
?a <- a1
3 variable subtition(s).

(ccc) Creating new agenda:
 [68,0]

(*** 47 ***) Depth: 47
(*** 47 ***) Plan size: 22
(*** 47 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 47 ***) Expanding: [68] (debark p1 a1 granada)

(*** 47 ***) Selecting a candidate task.
(*** 47 ***) Found: 1 candidates (left).
      [0] :action (debark p1 a1 granada)
(*** 47 ***) Solving action:
(:durative-action debark
 :parameters ( p1 a1 granada)
 :duration (= ?duration (debarking-time))
 :condition
   (and
      (in p1 a1)
      (at a1 granada)
   )

 :effect
   (and
      (not (in p1 a1))
      (at p1 granada)
      (increase         (board-limit a1)         1      )
   )

)
(*** 47 ***) working in action:
(:durative-action debark
 :parameters ( p1 a1 granada)
 :duration (= ?duration (debarking-time))
 :condition
   (and
      (in p1 a1)
      (at a1 granada)
   )

 :effect
   (and
      (not (in p1 a1))
      (at p1 granada)
      (increase         (board-limit a1)         1      )
   )

)

(*** 47 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 47 ***) Saving Simple Temporal Network: 12
(ccc) Deleted from state: (in p1 a1)
(ccc) Added to state: (at p1 granada)
(ccc) Changing value: (= (board-limit a1)1 )
(ccc) Added to state: (not (in p1 a1))
(ccc) board-limit was produced by: board
(ccc) Creating new agenda:
 [69,0]

(*** 48 ***) Depth: 48
(*** 48 ***) Plan size: 23
(*** 48 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 48 ***) Expanding: [69] (destino-done p1 granada)

(*** 48 ***) Selecting a candidate task.
(*** 48 ***) Found: 1 candidates (left).
      [0] :action (destino-done p1 granada)
(*** 48 ***) Solving action:
(:action destino-done
 :parameters ( p1 granada)
 :precondition ()
 :effect
   (and
      (not (destino p1 granada))
   )

)
(*** 48 ***) working in action:
(:action destino-done
 :parameters ( p1 granada)
 :precondition ()
 :effect
   (and
      (not (destino p1 granada))
   )

)

(*** 48 ***) No preconditions.
(*** 48 ***) Saving Simple Temporal Network: 13
(ccc) Deleted from state: (destino p1 granada)
(ccc) Added to state: (not (destino p1 granada))
(ccc) Creating new agenda:
 [70,0]

(*** 49 ***) Depth: 49
(*** 49 ***) Plan size: 24
(*** 49 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 49 ***) Selecting a candidate task.
(*** 49 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 49 ***) Solving action:
(:inline ()
   (decrease      (onboard-to a1 granada)      1   )
) 
(*** 49 ***) working in action:
(:inline ()
   (decrease      (onboard-to a1 granada)      1   )
) 

(*** 49 ***) No preconditions.
(ccc) Changing value: (= (onboard-to a1 granada)0 )
(ccc) onboard-to was produced by: :inline
(ccc) Creating new agenda:
 [71,0]

(*** 50 ***) Depth: 50
(*** 50 ***) Plan size: 25
(*** 50 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 50 ***) Expanding: [71] (debark-stage)

(*** 50 ***) Selecting a candidate task.
(*** 50 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 50 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 50 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 50 ***) Expanding method: At-destination
(### 50 ###) FAIL!!: No unifications.
(*** 50 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 50 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 50 ***) Expanding method: Base
(*** 50 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 50 ***) Using method: Base
(*** 50 ***) Found: 1 unification(s) (left). 
Unification [0]:
?a <- a1
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a1
1 variable subtition(s).

(ccc) Creating new agenda:
 [75,0]

(*** 51 ***) Depth: 51
(*** 51 ***) Plan size: 25
(*** 51 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 51 ***) Selecting a candidate task.
(*** 51 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 51 ***) Solving action:
(:inline ()
   (and
      (not (debark-stage-pending a1))
      (board-stage-pending a1)
   )

) 
(*** 51 ***) working in action:
(:inline ()
   (and
      (not (debark-stage-pending a1))
      (board-stage-pending a1)
   )

) 

(*** 51 ***) No preconditions.
(ccc) Deleted from state: (debark-stage-pending a1)
(ccc) Added to state: (board-stage-pending a1)
(ccc) Added to state: (not (debark-stage-pending a1))
(ccc) Creating new agenda:
 [76,0]

(*** 52 ***) Depth: 52
(*** 52 ***) Plan size: 26
(*** 52 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 52 ***) Expanding: [76] (debark-stage)

(*** 52 ***) Selecting a candidate task.
(*** 52 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 52 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 52 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 52 ***) Expanding method: At-destination
(### 52 ###) FAIL!!: No unifications.
(*** 52 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 52 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 52 ***) Expanding method: Base
(### 52 ###) FAIL!!: No unifications.
(*** 52 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 52 ***) Found: 2 methods to expand (left).
      [0] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [1] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 52 ***) Expanding method: continue
(*** 52 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 52 ***) Using method: continue
(*** 52 ***) Found: 2 unification(s) (left). 
Unification [0]:
?c <- sevilla
?p <- p2
2 variable subtition(s).

Unification [1]:
?c <- sevilla
?p <- p3
2 variable subtition(s).

(ccc) Performing unification: 
?c <- sevilla
?p <- p2
2 variable subtition(s).

(ccc) Creating new agenda:
 [78,0]

(*** 53 ***) Depth: 53
(*** 53 ***) Plan size: 26
(*** 53 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 53 ***) Expanding: [78] (board-stage)

(*** 53 ***) Selecting a candidate task.
(*** 53 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 53 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 53 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 53 ***) Expanding method: Seats-left
(### 53 ###) FAIL!!: No unifications.
(*** 53 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 53 ***) Found: 2 methods to expand (left).
      [0] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 53 ***) Expanding method: No-seats-left-priority
(### 53 ###) FAIL!!: No unifications.
(*** 53 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 53 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 53 ***) Expanding method: base
(*** 53 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 53 ***) Using method: base
(*** 53 ***) Found: 2 unification(s) (left). 
Unification [0]:
?a <- a2
1 variable subtition(s).

Unification [1]:
?a <- a1
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a2
1 variable subtition(s).

(ccc) Creating new agenda:
 [79,0]

(*** 54 ***) Depth: 54
(*** 54 ***) Plan size: 26
(*** 54 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 54 ***) Selecting a candidate task.
(*** 54 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 54 ***) Solving action:
(:inline ()
   (and
      (not (board-stage-pending a2))
      (fly-stage-pending a2)
   )

) 
(*** 54 ***) working in action:
(:inline ()
   (and
      (not (board-stage-pending a2))
      (fly-stage-pending a2)
   )

) 

(*** 54 ***) No preconditions.
(ccc) Deleted from state: (board-stage-pending a2)
(ccc) Added to state: (fly-stage-pending a2)
(ccc) Added to state: (not (board-stage-pending a2))
(ccc) Creating new agenda:
 [80,0]

(*** 55 ***) Depth: 55
(*** 55 ***) Plan size: 27
(*** 55 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 55 ***) Expanding: [80] (fly-stage)

(*** 55 ***) Selecting a candidate task.
(*** 55 ***) Found: 1 candidates (left).
      [0] :task (fly-stage)
(*** 55 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 55 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Indirect-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (> (board-limit ?a) 0)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (destino ?p - person ?c3 - city)
               (> (onboard-to ?a ?c3) 0)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [2] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 55 ***) Expanding method: Indirect-flight
(### 55 ###) FAIL!!: No unifications.
(*** 55 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 55 ***) Found: 2 methods to expand (left).
      [0] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [1] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 55 ***) Expanding method: Direct-flight
(*** 55 ***) Working in task:
(:task fly-stage
   :parameters ()
   (:method Indirect-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (> (board-limit ?a) 0)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (destino ?p - person ?c3 - city)
            (> (onboard-to ?a ?c3) 0)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method Direct-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (in ?tp - person ?a - aircraft)
         )

   :tasks (
      (calc-max-destination ?a)
      (fly-max ?a)
   )
   )
   (:method Empty-plane
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 55 ***) Using method: Direct-flight
(*** 55 ***) Found: 1 unification(s) (left). 
Unification [0]:
?tp <- p3
?a <- a2
2 variable subtition(s).

(ccc) Performing unification: 
?tp <- p3
?a <- a2
2 variable subtition(s).

(ccc) Creating new agenda:
 [82,0]

(*** 56 ***) Depth: 56
(*** 56 ***) Plan size: 27
(*** 56 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 56 ***) Expanding: [82] (calc-max-destination a2)

(*** 56 ***) Selecting a candidate task.
(*** 56 ***) Found: 1 candidates (left).
      [0] :task (calc-max-destination ?a)
(*** 56 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 56 ***) Found: 2 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (max-to ?a - aircraft ?c1 - city)
               (destino ?tp - person ?c2 - city)
               (at ?a - aircraft ?c3 - city)
               (not (= ?c1 ?c2))
               (or
                  (> (onboard-to ?a ?c2) (onboard-to ?a ?c1))
                  (= ?c1 ?c3)
               )

            )

      :tasks (
         (:inline ()
            (and
               (max-to ?a ?c2)
               (not (max-to ?a ?c1))
            )

         ) 
         (calc-max-destination ?a)
      )
      )
      [1] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 56 ***) Expanding method: m1
(*** 56 ***) Working in task:
(:task calc-max-destination
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (max-to a2 ?c1 - city)
            (destino ?tp - person ?c2 - city)
            (at a2 ?c3 - city)
            (not (= ?c1 ?c2))
            (or
               (> (onboard-to a2 ?c2) (onboard-to a2 ?c1))
               (= ?c1 ?c3)
            )

         )

   :tasks (
      (:inline ()
         (and
            (max-to a2 ?c2)
            (not (max-to a2 ?c1))
         )

      ) 
      (calc-max-destination a2)
   )
   )
   (:method base
   :precondition
   ( )
   :tasks (
      (:inline () ())
   )
   )
)

(*** 56 ***) Using method: m1
(*** 56 ***) Found: 2 unification(s) (left). 
Unification [0]:
?c3 <- almeria
?c2 <- sevilla
?tp <- p2
?c1 <- granada
4 variable subtition(s).

Unification [1]:
?c3 <- almeria
?c2 <- sevilla
?tp <- p3
?c1 <- granada
4 variable subtition(s).

(ccc) Performing unification: 
?c3 <- almeria
?c2 <- sevilla
?tp <- p2
?c1 <- granada
4 variable subtition(s).

(ccc) Creating new agenda:
 [84,0]

(*** 57 ***) Depth: 57
(*** 57 ***) Plan size: 27
(*** 57 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 57 ***) Selecting a candidate task.
(*** 57 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 57 ***) Solving action:
(:inline ()
   (and
      (max-to a2 sevilla)
      (not (max-to a2 granada))
   )

) 
(*** 57 ***) working in action:
(:inline ()
   (and
      (max-to a2 sevilla)
      (not (max-to a2 granada))
   )

) 

(*** 57 ***) No preconditions.
(ccc) Added to state: (max-to a2 sevilla)
(ccc) Deleted from state: (max-to a2 granada)
(ccc) Added to state: (not (max-to a2 granada))
(ccc) Creating new agenda:
 [85,0]

(*** 58 ***) Depth: 58
(*** 58 ***) Plan size: 28
(*** 58 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 58 ***) Expanding: [85] (calc-max-destination a2)

(*** 58 ***) Selecting a candidate task.
(*** 58 ***) Found: 1 candidates (left).
      [0] :task (calc-max-destination ?a)
(*** 58 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 58 ***) Found: 2 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (max-to ?a - aircraft ?c1 - city)
               (destino ?tp - person ?c2 - city)
               (at ?a - aircraft ?c3 - city)
               (not (= ?c1 ?c2))
               (or
                  (> (onboard-to ?a ?c2) (onboard-to ?a ?c1))
                  (= ?c1 ?c3)
               )

            )

      :tasks (
         (:inline ()
            (and
               (max-to ?a ?c2)
               (not (max-to ?a ?c1))
            )

         ) 
         (calc-max-destination ?a)
      )
      )
      [1] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 58 ***) Expanding method: m1
(### 58 ###) FAIL!!: No unifications.
(*** 58 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 58 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 58 ***) Expanding method: base
(*** 58 ***) Working in task:
(:task calc-max-destination
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (max-to a2 ?c1 - city)
            (destino ?tp - person ?c2 - city)
            (at a2 ?c3 - city)
            (not (= ?c1 ?c2))
            (or
               (> (onboard-to a2 ?c2) (onboard-to a2 ?c1))
               (= ?c1 ?c3)
            )

         )

   :tasks (
      (:inline ()
         (and
            (max-to a2 ?c2)
            (not (max-to a2 ?c1))
         )

      ) 
      (calc-max-destination a2)
   )
   )
   (:method base
   :precondition
   ( )
   :tasks (
      (:inline () ())
   )
   )
)

(*** 58 ***) Using method: base
(*** 58 ***) No preconditions.
(ccc) Creating new agenda:
 [87,0]

(*** 59 ***) Depth: 59
(*** 59 ***) Plan size: 28
(*** 59 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 59 ***) Selecting a candidate task.
(*** 59 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 59 ***) Solving action:
(:inline () ())
(*** 59 ***) working in action:
(:inline () ())

(*** 59 ***) No preconditions.
(ccc) Creating new agenda:
 [83,0]

(*** 60 ***) Depth: 60
(*** 60 ***) Plan size: 29
(*** 60 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 60 ***) Expanding: [83] (fly-max a2)

(*** 60 ***) Selecting a candidate task.
(*** 60 ***) Found: 1 candidates (left).
      [0] :task (fly-max ?a)
(*** 60 ***) Selecting a method to expand from compound task.
      :task (fly-max ?a)
(*** 60 ***) Found: 1 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (at ?a - aircraft ?c1 - city)
               (max-to ?a - aircraft ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 60 ***) Expanding method: m1
(*** 60 ***) Working in task:
(:task fly-max
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (at a2 ?c1 - city)
            (max-to a2 ?c2 - city)
            (llega-slow a2 ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion a2 ?c1 ?c2)
      (:inline ()
         (and
            (not (fly-stage-pending a2))
            (debark-stage-pending a2)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 60 ***) Using method: m1
(*** 60 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c2 <- sevilla
?c1 <- almeria
2 variable subtition(s).

(ccc) Performing unification: 
?c2 <- sevilla
?c1 <- almeria
2 variable subtition(s).

(ccc) Creating new agenda:
 [89,0]

(*** 61 ***) Depth: 61
(*** 61 ***) Plan size: 29
(*** 61 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 61 ***) Expanding: [89] (mover-avion a2 almeria sevilla)

(*** 61 ***) Selecting a candidate task.
(*** 61 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 61 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 61 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 61 ***) Expanding method: fuel-suficiente-fast
(### 61 ###) FAIL!!: No unifications.
(*** 61 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 61 ***) Found: 3 methods to expand (left).
      [0] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 61 ***) Expanding method: fuel-insuficiente-fast
(*** 61 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a2 almeria sevilla)
            (llega-fast a2 almeria sevilla)
         )

   :tasks (
      (zoom a2 almeria sevilla)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast a2 almeria sevilla)
         )

   :tasks (
      (refuel a2 almeria)
      (mover-avion a2 almeria sevilla)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 61 ***) Using method: fuel-insuficiente-fast
(*** 61 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [92,0]

(*** 62 ***) Depth: 62
(*** 62 ***) Plan size: 29
(*** 62 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 62 ***) Expanding: [92] (refuel a2 almeria)

(*** 62 ***) Selecting a candidate task.
(*** 62 ***) Found: 1 candidates (left).
      [0] :action (refuel a2 almeria)
(*** 62 ***) Solving action:
(:durative-action refuel
 :parameters ( a2 almeria)
 :duration (= ?duration (/ (- (capacity a2) (fuel a2)) (refuel-rate a2)))
 :condition
   (and
      (> (capacity a2) (fuel a2))
      (at a2 almeria)
   )

 :effect
   (assign      (fuel a2)      (capacity a2)   )
)
(*** 62 ***) working in action:
(:durative-action refuel
 :parameters ( a2 almeria)
 :duration (= ?duration (/ (- (capacity a2) (fuel a2)) (refuel-rate a2)))
 :condition
   (and
      (> (capacity a2) (fuel a2))
      (at a2 almeria)
   )

 :effect
   (assign      (fuel a2)      (capacity a2)   )
)

(*** 62 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 62 ***) Saving Simple Temporal Network: 14
(ccc) Changing value: (= (fuel a2)1100 )
(ccc) fuel was produced by: zoom
(ccc) Creating new agenda:
 [93,0]

(*** 63 ***) Depth: 63
(*** 63 ***) Plan size: 30
(*** 63 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 63 ***) Expanding: [93] (mover-avion a2 almeria sevilla)

(*** 63 ***) Selecting a candidate task.
(*** 63 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 63 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 63 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 63 ***) Expanding method: fuel-suficiente-fast
(*** 63 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a2 almeria sevilla)
            (llega-fast a2 almeria sevilla)
         )

   :tasks (
      (zoom a2 almeria sevilla)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (fly ?a ?c1 ?c2)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 63 ***) Using method: fuel-suficiente-fast
(*** 63 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [95,0]

(*** 64 ***) Depth: 64
(*** 64 ***) Plan size: 30
(*** 64 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 64 ***) Expanding: [95] (zoom a2 almeria sevilla)

(*** 64 ***) Selecting a candidate task.
(*** 64 ***) Found: 1 candidates (left).
      [0] :action (zoom a2 almeria sevilla)
(*** 64 ***) Solving action:
(:durative-action zoom
 :parameters ( a2 almeria sevilla)
 :duration (= ?duration (/ (distance almeria sevilla) (fast-speed a2)))
 :condition
   (and
      (at a2 almeria)
      (>= (fuel a2) (* (distance almeria sevilla) (fast-burn a2)))
   )

 :effect
   (and
      (not (at a2 almeria))
      (at a2 sevilla)
      (increase         (total-fuel-used a2)         (* (distance almeria sevilla) (fast-burn a2))      )
      (decrease         (fuel a2)         (* (distance almeria sevilla) (fast-burn a2))      )
   )

)
(*** 64 ***) working in action:
(:durative-action zoom
 :parameters ( a2 almeria sevilla)
 :duration (= ?duration (/ (distance almeria sevilla) (fast-speed a2)))
 :condition
   (and
      (at a2 almeria)
      (>= (fuel a2) (* (distance almeria sevilla) (fast-burn a2)))
   )

 :effect
   (and
      (not (at a2 almeria))
      (at a2 sevilla)
      (increase         (total-fuel-used a2)         (* (distance almeria sevilla) (fast-burn a2))      )
      (decrease         (fuel a2)         (* (distance almeria sevilla) (fast-burn a2))      )
   )

)

(*** 64 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 64 ***) Saving Simple Temporal Network: 15
(ccc) Deleted from state: (at a2 almeria)
(ccc) Added to state: (at a2 sevilla)
(ccc) Changing value: (= (total-fuel-used a2)1914 )
(ccc) Changing value: (= (fuel a2)280 )
(ccc) Added to state: (not (at a2 almeria))
(ccc) total-fuel-used was produced by: zoom
(ccc) fuel was produced by: refuel
(ccc) Creating new agenda:
 [90,0]

(*** 65 ***) Depth: 65
(*** 65 ***) Plan size: 31
(*** 65 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 65 ***) Selecting a candidate task.
(*** 65 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 65 ***) Solving action:
(:inline ()
   (and
      (not (fly-stage-pending a2))
      (debark-stage-pending a2)
   )

) 
(*** 65 ***) working in action:
(:inline ()
   (and
      (not (fly-stage-pending a2))
      (debark-stage-pending a2)
   )

) 

(*** 65 ***) No preconditions.
(ccc) Deleted from state: (fly-stage-pending a2)
(ccc) Added to state: (debark-stage-pending a2)
(ccc) Added to state: (not (fly-stage-pending a2))
(ccc) Creating new agenda:
 [91,0]

(*** 66 ***) Depth: 66
(*** 66 ***) Plan size: 32
(*** 66 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 66 ***) Expanding: [91] (debark-stage)

(*** 66 ***) Selecting a candidate task.
(*** 66 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 66 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 66 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 66 ***) Expanding method: At-destination
(*** 66 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 66 ***) Using method: At-destination
(*** 66 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c <- sevilla
?p <- p3
?a <- a2
3 variable subtition(s).

(ccc) Performing unification: 
?c <- sevilla
?p <- p3
?a <- a2
3 variable subtition(s).

(ccc) Creating new agenda:
 [98,0]

(*** 67 ***) Depth: 67
(*** 67 ***) Plan size: 32
(*** 67 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 67 ***) Expanding: [98] (debark p3 a2 sevilla)

(*** 67 ***) Selecting a candidate task.
(*** 67 ***) Found: 1 candidates (left).
      [0] :action (debark p3 a2 sevilla)
(*** 67 ***) Solving action:
(:durative-action debark
 :parameters ( p3 a2 sevilla)
 :duration (= ?duration (debarking-time))
 :condition
   (and
      (in p3 a2)
      (at a2 sevilla)
   )

 :effect
   (and
      (not (in p3 a2))
      (at p3 sevilla)
      (increase         (board-limit a2)         1      )
   )

)
(*** 67 ***) working in action:
(:durative-action debark
 :parameters ( p3 a2 sevilla)
 :duration (= ?duration (debarking-time))
 :condition
   (and
      (in p3 a2)
      (at a2 sevilla)
   )

 :effect
   (and
      (not (in p3 a2))
      (at p3 sevilla)
      (increase         (board-limit a2)         1      )
   )

)

(*** 67 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 67 ***) Saving Simple Temporal Network: 16
(ccc) Deleted from state: (in p3 a2)
(ccc) Added to state: (at p3 sevilla)
(ccc) Changing value: (= (board-limit a2)2 )
(ccc) Added to state: (not (in p3 a2))
(ccc) board-limit was produced by: board
(ccc) Creating new agenda:
 [99,0]

(*** 68 ***) Depth: 68
(*** 68 ***) Plan size: 33
(*** 68 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 68 ***) Expanding: [99] (destino-done p3 sevilla)

(*** 68 ***) Selecting a candidate task.
(*** 68 ***) Found: 1 candidates (left).
      [0] :action (destino-done p3 sevilla)
(*** 68 ***) Solving action:
(:action destino-done
 :parameters ( p3 sevilla)
 :precondition ()
 :effect
   (and
      (not (destino p3 sevilla))
   )

)
(*** 68 ***) working in action:
(:action destino-done
 :parameters ( p3 sevilla)
 :precondition ()
 :effect
   (and
      (not (destino p3 sevilla))
   )

)

(*** 68 ***) No preconditions.
(*** 68 ***) Saving Simple Temporal Network: 17
(ccc) Deleted from state: (destino p3 sevilla)
(ccc) Added to state: (not (destino p3 sevilla))
(ccc) Creating new agenda:
 [100,0]

(*** 69 ***) Depth: 69
(*** 69 ***) Plan size: 34
(*** 69 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 69 ***) Selecting a candidate task.
(*** 69 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 69 ***) Solving action:
(:inline ()
   (decrease      (onboard-to a2 sevilla)      1   )
) 
(*** 69 ***) working in action:
(:inline ()
   (decrease      (onboard-to a2 sevilla)      1   )
) 

(*** 69 ***) No preconditions.
(ccc) Changing value: (= (onboard-to a2 sevilla)0 )
(ccc) onboard-to was produced by: :inline
(ccc) Creating new agenda:
 [101,0]

(*** 70 ***) Depth: 70
(*** 70 ***) Plan size: 35
(*** 70 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 70 ***) Expanding: [101] (debark-stage)

(*** 70 ***) Selecting a candidate task.
(*** 70 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 70 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 70 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 70 ***) Expanding method: At-destination
(### 70 ###) FAIL!!: No unifications.
(*** 70 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 70 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 70 ***) Expanding method: Base
(*** 70 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 70 ***) Using method: Base
(*** 70 ***) Found: 1 unification(s) (left). 
Unification [0]:
?a <- a2
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a2
1 variable subtition(s).

(ccc) Creating new agenda:
 [105,0]

(*** 71 ***) Depth: 71
(*** 71 ***) Plan size: 35
(*** 71 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 71 ***) Selecting a candidate task.
(*** 71 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 71 ***) Solving action:
(:inline ()
   (and
      (not (debark-stage-pending a2))
      (board-stage-pending a2)
   )

) 
(*** 71 ***) working in action:
(:inline ()
   (and
      (not (debark-stage-pending a2))
      (board-stage-pending a2)
   )

) 

(*** 71 ***) No preconditions.
(ccc) Deleted from state: (debark-stage-pending a2)
(ccc) Added to state: (board-stage-pending a2)
(ccc) Added to state: (not (debark-stage-pending a2))
(ccc) Creating new agenda:
 [106,0]

(*** 72 ***) Depth: 72
(*** 72 ***) Plan size: 36
(*** 72 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 72 ***) Expanding: [106] (debark-stage)

(*** 72 ***) Selecting a candidate task.
(*** 72 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 72 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 72 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 72 ***) Expanding method: At-destination
(### 72 ###) FAIL!!: No unifications.
(*** 72 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 72 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 72 ***) Expanding method: Base
(### 72 ###) FAIL!!: No unifications.
(*** 72 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 72 ***) Found: 2 methods to expand (left).
      [0] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [1] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 72 ***) Expanding method: continue
(*** 72 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 72 ***) Using method: continue
(*** 72 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c <- sevilla
?p <- p2
2 variable subtition(s).

(ccc) Performing unification: 
?c <- sevilla
?p <- p2
2 variable subtition(s).

(ccc) Creating new agenda:
 [108,0]

(*** 73 ***) Depth: 73
(*** 73 ***) Plan size: 36
(*** 73 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 73 ***) Expanding: [108] (board-stage)

(*** 73 ***) Selecting a candidate task.
(*** 73 ***) Found: 1 candidates (left).
      [0] :task (board-stage)
(*** 73 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 73 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Seats-left
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (destino ?p - person ?c2 - city)
               (> (board-limit ?a) 0)
            )

      :tasks (
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c2)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [2] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 73 ***) Expanding method: Seats-left
(### 73 ###) FAIL!!: No unifications.
(*** 73 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 73 ***) Found: 2 methods to expand (left).
      [0] 
      (:method No-seats-left-priority
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (available ?p - person ?c - city)
               (not (> (board-limit ?a) 0))
               (in ?p2 - person ?a - aircraft)
               (destino ?p - person ?c1 - city)
               (destino ?p2 - person ?c2 - city)
               (not (= ?c1 ?c2))
               (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
            )

      :tasks (
         (debark ?p2 ?a ?c)
         (:inline ()
            (and
               (decrease                  (onboard-to ?a ?c2)                  1               )
            )

         ) 
         (board ?p ?a ?c)
         (:inline ()
            (and
               (increase                  (onboard-to ?a ?c1)                  1               )
               (not (pending ?p))
            )

         ) 
         (board-stage)
      )
      )
      [1] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 73 ***) Expanding method: No-seats-left-priority
(### 73 ###) FAIL!!: No unifications.
(*** 73 ***) Selecting a method to expand from compound task.
      :task (board-stage)
(*** 73 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
            (and
               (board-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (board-stage-pending ?a))
               (fly-stage-pending ?a)
            )

         ) 
         (fly-stage)
      )
      )
(*** 73 ***) Expanding method: base
(*** 73 ***) Working in task:
(:task board-stage
   :parameters ()
   (:method Seats-left
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (destino ?p - person ?c2 - city)
            (> (board-limit ?a) 0)
         )

   :tasks (
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c2)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method No-seats-left-priority
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (available ?p - person ?c - city)
            (not (> (board-limit ?a) 0))
            (in ?p2 - person ?a - aircraft)
            (destino ?p - person ?c1 - city)
            (destino ?p2 - person ?c2 - city)
            (not (= ?c1 ?c2))
            (> (onboard-to ?a ?c1) (onboard-to ?a ?c2))
         )

   :tasks (
      (debark ?p2 ?a ?c)
      (:inline ()
         (and
            (decrease               (onboard-to ?a ?c2)               1            )
         )

      ) 
      (board ?p ?a ?c)
      (:inline ()
         (and
            (increase               (onboard-to ?a ?c1)               1            )
            (not (pending ?p))
         )

      ) 
      (board-stage)
   )
   )
   (:method base
   :precondition
         (and
            (board-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (board-stage-pending ?a))
            (fly-stage-pending ?a)
         )

      ) 
      (fly-stage)
   )
   )
)

(*** 73 ***) Using method: base
(*** 73 ***) Found: 2 unification(s) (left). 
Unification [0]:
?a <- a1
1 variable subtition(s).

Unification [1]:
?a <- a2
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a1
1 variable subtition(s).

(ccc) Creating new agenda:
 [109,0]

(*** 74 ***) Depth: 74
(*** 74 ***) Plan size: 36
(*** 74 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 74 ***) Selecting a candidate task.
(*** 74 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 74 ***) Solving action:
(:inline ()
   (and
      (not (board-stage-pending a1))
      (fly-stage-pending a1)
   )

) 
(*** 74 ***) working in action:
(:inline ()
   (and
      (not (board-stage-pending a1))
      (fly-stage-pending a1)
   )

) 

(*** 74 ***) No preconditions.
(ccc) Deleted from state: (board-stage-pending a1)
(ccc) Added to state: (fly-stage-pending a1)
(ccc) Added to state: (not (board-stage-pending a1))
(ccc) Creating new agenda:
 [110,0]

(*** 75 ***) Depth: 75
(*** 75 ***) Plan size: 37
(*** 75 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 75 ***) Expanding: [110] (fly-stage)

(*** 75 ***) Selecting a candidate task.
(*** 75 ***) Found: 1 candidates (left).
      [0] :task (fly-stage)
(*** 75 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 75 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Indirect-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (> (board-limit ?a) 0)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (destino ?p - person ?c3 - city)
               (> (onboard-to ?a ?c3) 0)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [2] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 75 ***) Expanding method: Indirect-flight
(### 75 ###) FAIL!!: No unifications.
(*** 75 ***) Selecting a method to expand from compound task.
      :task (fly-stage)
(*** 75 ***) Found: 2 methods to expand (left).
      [0] 
      (:method Direct-flight
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (in ?tp - person ?a - aircraft)
            )

      :tasks (
         (calc-max-destination ?a)
         (fly-max ?a)
      )
      )
      [1] 
      (:method Empty-plane
      :precondition
            (and
               (fly-stage-pending ?a - aircraft)
               (at ?a - aircraft ?c1 - city)
               (available ?p - person ?c2 - city)
               (not (pending ?p - person))
               (not (= ?c1 ?c2))
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (pending ?p)
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 75 ***) Expanding method: Direct-flight
(*** 75 ***) Working in task:
(:task fly-stage
   :parameters ()
   (:method Indirect-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (> (board-limit ?a) 0)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (destino ?p - person ?c3 - city)
            (> (onboard-to ?a ?c3) 0)
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method Direct-flight
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (in ?tp - person ?a - aircraft)
         )

   :tasks (
      (calc-max-destination ?a)
      (fly-max ?a)
   )
   )
   (:method Empty-plane
   :precondition
         (and
            (fly-stage-pending ?a - aircraft)
            (at ?a - aircraft ?c1 - city)
            (available ?p - person ?c2 - city)
            (not (pending ?p - person))
            (not (= ?c1 ?c2))
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion ?a ?c1 ?c2)
      (:inline ()
         (and
            (pending ?p)
            (not (fly-stage-pending ?a))
            (debark-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 75 ***) Using method: Direct-flight
(*** 75 ***) Found: 1 unification(s) (left). 
Unification [0]:
?tp <- p2
?a <- a1
2 variable subtition(s).

(ccc) Performing unification: 
?tp <- p2
?a <- a1
2 variable subtition(s).

(ccc) Creating new agenda:
 [112,0]

(*** 76 ***) Depth: 76
(*** 76 ***) Plan size: 37
(*** 76 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 76 ***) Expanding: [112] (calc-max-destination a1)

(*** 76 ***) Selecting a candidate task.
(*** 76 ***) Found: 1 candidates (left).
      [0] :task (calc-max-destination ?a)
(*** 76 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 76 ***) Found: 2 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (max-to ?a - aircraft ?c1 - city)
               (destino ?tp - person ?c2 - city)
               (at ?a - aircraft ?c3 - city)
               (not (= ?c1 ?c2))
               (or
                  (> (onboard-to ?a ?c2) (onboard-to ?a ?c1))
                  (= ?c1 ?c3)
               )

            )

      :tasks (
         (:inline ()
            (and
               (max-to ?a ?c2)
               (not (max-to ?a ?c1))
            )

         ) 
         (calc-max-destination ?a)
      )
      )
      [1] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 76 ***) Expanding method: m1
(*** 76 ***) Working in task:
(:task calc-max-destination
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (max-to a1 ?c1 - city)
            (destino ?tp - person ?c2 - city)
            (at a1 ?c3 - city)
            (not (= ?c1 ?c2))
            (or
               (> (onboard-to a1 ?c2) (onboard-to a1 ?c1))
               (= ?c1 ?c3)
            )

         )

   :tasks (
      (:inline ()
         (and
            (max-to a1 ?c2)
            (not (max-to a1 ?c1))
         )

      ) 
      (calc-max-destination a1)
   )
   )
   (:method base
   :precondition
   ( )
   :tasks (
      (:inline () ())
   )
   )
)

(*** 76 ***) Using method: m1
(*** 76 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c3 <- granada
?c2 <- sevilla
?tp <- p2
?c1 <- granada
4 variable subtition(s).

(ccc) Performing unification: 
?c3 <- granada
?c2 <- sevilla
?tp <- p2
?c1 <- granada
4 variable subtition(s).

(ccc) Creating new agenda:
 [114,0]

(*** 77 ***) Depth: 77
(*** 77 ***) Plan size: 37
(*** 77 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 77 ***) Selecting a candidate task.
(*** 77 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 77 ***) Solving action:
(:inline ()
   (and
      (max-to a1 sevilla)
      (not (max-to a1 granada))
   )

) 
(*** 77 ***) working in action:
(:inline ()
   (and
      (max-to a1 sevilla)
      (not (max-to a1 granada))
   )

) 

(*** 77 ***) No preconditions.
(ccc) Added to state: (max-to a1 sevilla)
(ccc) Deleted from state: (max-to a1 granada)
(ccc) Added to state: (not (max-to a1 granada))
(ccc) Creating new agenda:
 [115,0]

(*** 78 ***) Depth: 78
(*** 78 ***) Plan size: 38
(*** 78 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 78 ***) Expanding: [115] (calc-max-destination a1)

(*** 78 ***) Selecting a candidate task.
(*** 78 ***) Found: 1 candidates (left).
      [0] :task (calc-max-destination ?a)
(*** 78 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 78 ***) Found: 2 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (max-to ?a - aircraft ?c1 - city)
               (destino ?tp - person ?c2 - city)
               (at ?a - aircraft ?c3 - city)
               (not (= ?c1 ?c2))
               (or
                  (> (onboard-to ?a ?c2) (onboard-to ?a ?c1))
                  (= ?c1 ?c3)
               )

            )

      :tasks (
         (:inline ()
            (and
               (max-to ?a ?c2)
               (not (max-to ?a ?c1))
            )

         ) 
         (calc-max-destination ?a)
      )
      )
      [1] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 78 ***) Expanding method: m1
(### 78 ###) FAIL!!: No unifications.
(*** 78 ***) Selecting a method to expand from compound task.
      :task (calc-max-destination ?a)
(*** 78 ***) Found: 1 methods to expand (left).
      [0] 
      (:method base
      :precondition
      ( )
      :tasks (
         (:inline () ())
      )
      )
(*** 78 ***) Expanding method: base
(*** 78 ***) Working in task:
(:task calc-max-destination
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (max-to a1 ?c1 - city)
            (destino ?tp - person ?c2 - city)
            (at a1 ?c3 - city)
            (not (= ?c1 ?c2))
            (or
               (> (onboard-to a1 ?c2) (onboard-to a1 ?c1))
               (= ?c1 ?c3)
            )

         )

   :tasks (
      (:inline ()
         (and
            (max-to a1 ?c2)
            (not (max-to a1 ?c1))
         )

      ) 
      (calc-max-destination a1)
   )
   )
   (:method base
   :precondition
   ( )
   :tasks (
      (:inline () ())
   )
   )
)

(*** 78 ***) Using method: base
(*** 78 ***) No preconditions.
(ccc) Creating new agenda:
 [117,0]

(*** 79 ***) Depth: 79
(*** 79 ***) Plan size: 38
(*** 79 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 79 ***) Selecting a candidate task.
(*** 79 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 79 ***) Solving action:
(:inline () ())
(*** 79 ***) working in action:
(:inline () ())

(*** 79 ***) No preconditions.
(ccc) Creating new agenda:
 [113,0]

(*** 80 ***) Depth: 80
(*** 80 ***) Plan size: 39
(*** 80 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 80 ***) Expanding: [113] (fly-max a1)

(*** 80 ***) Selecting a candidate task.
(*** 80 ***) Found: 1 candidates (left).
      [0] :task (fly-max ?a)
(*** 80 ***) Selecting a method to expand from compound task.
      :task (fly-max ?a)
(*** 80 ***) Found: 1 methods to expand (left).
      [0] 
      (:method m1
      :precondition
            (and
               (at ?a - aircraft ?c1 - city)
               (max-to ?a - aircraft ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (mover-avion ?a ?c1 ?c2)
         (:inline ()
            (and
               (not (fly-stage-pending ?a))
               (debark-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
(*** 80 ***) Expanding method: m1
(*** 80 ***) Working in task:
(:task fly-max
   :parameters ( ?a - aircraft)
   (:method m1
   :precondition
         (and
            (at a1 ?c1 - city)
            (max-to a1 ?c2 - city)
            (llega-slow a1 ?c1 - city ?c2 - city)
         )

   :tasks (
      (mover-avion a1 ?c1 ?c2)
      (:inline ()
         (and
            (not (fly-stage-pending a1))
            (debark-stage-pending a1)
         )

      ) 
      (debark-stage)
   )
   )
)

(*** 80 ***) Using method: m1
(*** 80 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c2 <- sevilla
?c1 <- granada
2 variable subtition(s).

(ccc) Performing unification: 
?c2 <- sevilla
?c1 <- granada
2 variable subtition(s).

(ccc) Creating new agenda:
 [119,0]

(*** 81 ***) Depth: 81
(*** 81 ***) Plan size: 39
(*** 81 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 81 ***) Expanding: [119] (mover-avion a1 granada sevilla)

(*** 81 ***) Selecting a candidate task.
(*** 81 ***) Found: 1 candidates (left).
      [0] :task (mover-avion ?a ?c1 ?c2)
(*** 81 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 81 ***) Found: 4 methods to expand (left).
      [0] 
      (:method fuel-suficiente-fast
      :precondition
            (and
               (hay-fuel-fast ?a - aircraft ?c1 - city ?c2 - city)
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (zoom ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [3] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 81 ***) Expanding method: fuel-suficiente-fast
(### 81 ###) FAIL!!: No unifications.
(*** 81 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 81 ***) Found: 3 methods to expand (left).
      [0] 
      (:method fuel-insuficiente-fast
      :precondition
            (and
               (llega-fast ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [2] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 81 ***) Expanding method: fuel-insuficiente-fast
(### 81 ###) FAIL!!: No unifications.
(*** 81 ***) Selecting a method to expand from compound task.
      :task (mover-avion ?a ?c1 ?c2)
(*** 81 ***) Found: 2 methods to expand (left).
      [0] 
      (:method fuel-suficiente-slow
      :precondition
            (and
               (hay-fuel-slow ?a - aircraft ?c1 - city ?c2 - city)
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (fly ?a ?c1 ?c2)
      )
      )
      [1] 
      (:method fuel-insuficiente
      :precondition
            (and
               (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
            )

      :tasks (
         (refuel ?a ?c1)
         (mover-avion ?a ?c1 ?c2)
      )
      )
(*** 81 ***) Expanding method: fuel-suficiente-slow
(*** 81 ***) Working in task:
(:task mover-avion
   :parameters ( ?a - aircraft ?c1 - city ?c2 - city)
   (:method fuel-suficiente-fast
   :precondition
         (and
            (hay-fuel-fast a1 granada sevilla)
            (llega-fast a1 granada sevilla)
         )

   :tasks (
      (zoom a1 granada sevilla)
   )
   )
   (:method fuel-insuficiente-fast
   :precondition
         (and
            (llega-fast a1 granada sevilla)
         )

   :tasks (
      (refuel a1 granada)
      (mover-avion a1 granada sevilla)
   )
   )
   (:method fuel-suficiente-slow
   :precondition
         (and
            (hay-fuel-slow a1 granada sevilla)
            (llega-slow a1 granada sevilla)
         )

   :tasks (
      (fly a1 granada sevilla)
   )
   )
   (:method fuel-insuficiente
   :precondition
         (and
            (llega-slow ?a - aircraft ?c1 - city ?c2 - city)
         )

   :tasks (
      (refuel ?a ?c1)
      (mover-avion ?a ?c1 ?c2)
   )
   )
)

(*** 81 ***) Using method: fuel-suficiente-slow
(*** 81 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [122,0]

(*** 82 ***) Depth: 82
(*** 82 ***) Plan size: 39
(*** 82 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 82 ***) Expanding: [122] (fly a1 granada sevilla)

(*** 82 ***) Selecting a candidate task.
(*** 82 ***) Found: 1 candidates (left).
      [0] :action (fly a1 granada sevilla)
(*** 82 ***) Solving action:
(:durative-action fly
 :parameters ( a1 granada sevilla)
 :duration (= ?duration (/ (distance granada sevilla) (slow-speed a1)))
 :condition
   (and
      (at a1 granada)
      (>= (fuel a1) (* (distance granada sevilla) (slow-burn a1)))
   )

 :effect
   (and
      (not (at a1 granada))
      (at a1 sevilla)
      (increase         (total-fuel-used a1)         (* (distance granada sevilla) (slow-burn a1))      )
      (decrease         (fuel a1)         (* (distance granada sevilla) (slow-burn a1))      )
   )

)
(*** 82 ***) working in action:
(:durative-action fly
 :parameters ( a1 granada sevilla)
 :duration (= ?duration (/ (distance granada sevilla) (slow-speed a1)))
 :condition
   (and
      (at a1 granada)
      (>= (fuel a1) (* (distance granada sevilla) (slow-burn a1)))
   )

 :effect
   (and
      (not (at a1 granada))
      (at a1 sevilla)
      (increase         (total-fuel-used a1)         (* (distance granada sevilla) (slow-burn a1))      )
      (decrease         (fuel a1)         (* (distance granada sevilla) (slow-burn a1))      )
   )

)

(*** 82 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 82 ***) Saving Simple Temporal Network: 18
(ccc) Deleted from state: (at a1 granada)
(ccc) Added to state: (at a1 sevilla)
(ccc) Changing value: (= (total-fuel-used a1)1396 )
(ccc) Changing value: (= (fuel a1)524 )
(ccc) Added to state: (not (at a1 granada))
(ccc) total-fuel-used was produced by: zoom
(ccc) fuel was produced by: zoom
(ccc) Creating new agenda:
 [120,0]

(*** 83 ***) Depth: 83
(*** 83 ***) Plan size: 40
(*** 83 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 83 ***) Selecting a candidate task.
(*** 83 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 83 ***) Solving action:
(:inline ()
   (and
      (not (fly-stage-pending a1))
      (debark-stage-pending a1)
   )

) 
(*** 83 ***) working in action:
(:inline ()
   (and
      (not (fly-stage-pending a1))
      (debark-stage-pending a1)
   )

) 

(*** 83 ***) No preconditions.
(ccc) Deleted from state: (fly-stage-pending a1)
(ccc) Added to state: (debark-stage-pending a1)
(ccc) Added to state: (not (fly-stage-pending a1))
(ccc) Creating new agenda:
 [121,0]

(*** 84 ***) Depth: 84
(*** 84 ***) Plan size: 41
(*** 84 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 84 ***) Expanding: [121] (debark-stage)

(*** 84 ***) Selecting a candidate task.
(*** 84 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 84 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 84 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 84 ***) Expanding method: At-destination
(*** 84 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 84 ***) Using method: At-destination
(*** 84 ***) Found: 1 unification(s) (left). 
Unification [0]:
?c <- sevilla
?p <- p2
?a <- a1
3 variable subtition(s).

(ccc) Performing unification: 
?c <- sevilla
?p <- p2
?a <- a1
3 variable subtition(s).

(ccc) Creating new agenda:
 [125,0]

(*** 85 ***) Depth: 85
(*** 85 ***) Plan size: 41
(*** 85 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 85 ***) Expanding: [125] (debark p2 a1 sevilla)

(*** 85 ***) Selecting a candidate task.
(*** 85 ***) Found: 1 candidates (left).
      [0] :action (debark p2 a1 sevilla)
(*** 85 ***) Solving action:
(:durative-action debark
 :parameters ( p2 a1 sevilla)
 :duration (= ?duration (debarking-time))
 :condition
   (and
      (in p2 a1)
      (at a1 sevilla)
   )

 :effect
   (and
      (not (in p2 a1))
      (at p2 sevilla)
      (increase         (board-limit a1)         1      )
   )

)
(*** 85 ***) working in action:
(:durative-action debark
 :parameters ( p2 a1 sevilla)
 :duration (= ?duration (debarking-time))
 :condition
   (and
      (in p2 a1)
      (at a1 sevilla)
   )

 :effect
   (and
      (not (in p2 a1))
      (at p2 sevilla)
      (increase         (board-limit a1)         1      )
   )

)

(*** 85 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(*** 85 ***) Saving Simple Temporal Network: 19
(ccc) Deleted from state: (in p2 a1)
(ccc) Added to state: (at p2 sevilla)
(ccc) Changing value: (= (board-limit a1)2 )
(ccc) Added to state: (not (in p2 a1))
(ccc) board-limit was produced by: debark
(ccc) Creating new agenda:
 [126,0]

(*** 86 ***) Depth: 86
(*** 86 ***) Plan size: 42
(*** 86 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 86 ***) Expanding: [126] (destino-done p2 sevilla)

(*** 86 ***) Selecting a candidate task.
(*** 86 ***) Found: 1 candidates (left).
      [0] :action (destino-done p2 sevilla)
(*** 86 ***) Solving action:
(:action destino-done
 :parameters ( p2 sevilla)
 :precondition ()
 :effect
   (and
      (not (destino p2 sevilla))
   )

)
(*** 86 ***) working in action:
(:action destino-done
 :parameters ( p2 sevilla)
 :precondition ()
 :effect
   (and
      (not (destino p2 sevilla))
   )

)

(*** 86 ***) No preconditions.
(*** 86 ***) Saving Simple Temporal Network: 20
(ccc) Deleted from state: (destino p2 sevilla)
(ccc) Added to state: (not (destino p2 sevilla))
(ccc) Creating new agenda:
 [127,0]

(*** 87 ***) Depth: 87
(*** 87 ***) Plan size: 43
(*** 87 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 87 ***) Selecting a candidate task.
(*** 87 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 87 ***) Solving action:
(:inline ()
   (decrease      (onboard-to a1 sevilla)      1   )
) 
(*** 87 ***) working in action:
(:inline ()
   (decrease      (onboard-to a1 sevilla)      1   )
) 

(*** 87 ***) No preconditions.
(ccc) Changing value: (= (onboard-to a1 sevilla)0 )
(ccc) onboard-to was produced by: :inline
(ccc) Creating new agenda:
 [128,0]

(*** 88 ***) Depth: 88
(*** 88 ***) Plan size: 44
(*** 88 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 88 ***) Expanding: [128] (debark-stage)

(*** 88 ***) Selecting a candidate task.
(*** 88 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 88 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 88 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 88 ***) Expanding method: At-destination
(### 88 ###) FAIL!!: No unifications.
(*** 88 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 88 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 88 ***) Expanding method: Base
(*** 88 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 88 ***) Using method: Base
(*** 88 ***) Found: 1 unification(s) (left). 
Unification [0]:
?a <- a1
1 variable subtition(s).

(ccc) Performing unification: 
?a <- a1
1 variable subtition(s).

(ccc) Creating new agenda:
 [132,0]

(*** 89 ***) Depth: 89
(*** 89 ***) Plan size: 44
(*** 89 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 89 ***) Selecting a candidate task.
(*** 89 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 89 ***) Solving action:
(:inline ()
   (and
      (not (debark-stage-pending a1))
      (board-stage-pending a1)
   )

) 
(*** 89 ***) working in action:
(:inline ()
   (and
      (not (debark-stage-pending a1))
      (board-stage-pending a1)
   )

) 

(*** 89 ***) No preconditions.
(ccc) Deleted from state: (debark-stage-pending a1)
(ccc) Added to state: (board-stage-pending a1)
(ccc) Added to state: (not (debark-stage-pending a1))
(ccc) Creating new agenda:
 [133,0]

(*** 90 ***) Depth: 90
(*** 90 ***) Plan size: 45
(*** 90 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 90 ***) Expanding: [133] (debark-stage)

(*** 90 ***) Selecting a candidate task.
(*** 90 ***) Found: 1 candidates (left).
      [0] :task (debark-stage)
(*** 90 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 90 ***) Found: 4 methods to expand (left).
      [0] 
      (:method At-destination
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
               (in ?p - person ?a - aircraft)
               (at ?a - aircraft ?c - city)
               (destino ?p - person ?c - city)
            )

      :tasks (
         (debark ?p ?a ?c)
         (destino-done ?p ?c)
         (:inline ()
            (decrease               (onboard-to ?a ?c)               1            )
         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [2] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [3] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 90 ***) Expanding method: At-destination
(### 90 ###) FAIL!!: No unifications.
(*** 90 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 90 ***) Found: 3 methods to expand (left).
      [0] 
      (:method Base
      :precondition
            (and
               (debark-stage-pending ?a - aircraft)
            )

      :tasks (
         (:inline ()
            (and
               (not (debark-stage-pending ?a))
               (board-stage-pending ?a)
            )

         ) 
         (debark-stage)
      )
      )
      [1] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [2] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 90 ***) Expanding method: Base
(### 90 ###) FAIL!!: No unifications.
(*** 90 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 90 ***) Found: 2 methods to expand (left).
      [0] 
      (:method continue
      :precondition
            (destino ?p - person ?c - city)
      :tasks (
         (board-stage)
      )
      )
      [1] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 90 ***) Expanding method: continue
(### 90 ###) FAIL!!: No unifications.
(*** 90 ***) Selecting a method to expand from compound task.
      :task (debark-stage)
(*** 90 ***) Found: 1 methods to expand (left).
      [0] 
      (:method finish
      :precondition
            (not (destino ?p - person ?c - city))
      :tasks (
         (:inline () ())
      )
      )
(*** 90 ***) Expanding method: finish
(*** 90 ***) Working in task:
(:task debark-stage
   :parameters ()
   (:method At-destination
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
            (in ?p - person ?a - aircraft)
            (at ?a - aircraft ?c - city)
            (destino ?p - person ?c - city)
         )

   :tasks (
      (debark ?p ?a ?c)
      (destino-done ?p ?c)
      (:inline ()
         (decrease            (onboard-to ?a ?c)            1         )
      ) 
      (debark-stage)
   )
   )
   (:method Base
   :precondition
         (and
            (debark-stage-pending ?a - aircraft)
         )

   :tasks (
      (:inline ()
         (and
            (not (debark-stage-pending ?a))
            (board-stage-pending ?a)
         )

      ) 
      (debark-stage)
   )
   )
   (:method continue
   :precondition
         (destino ?p - person ?c - city)
   :tasks (
      (board-stage)
   )
   )
   (:method finish
   :precondition
         (not (destino ?p - person ?c - city))
   :tasks (
      (:inline () ())
   )
   )
)

(*** 90 ***) Using method: finish
(*** 90 ***) Found: 1 unification(s) (left). 
Unification [0]:
0 variable subtition(s).

(ccc) Performing unification: 
0 variable subtition(s).

(ccc) Creating new agenda:
 [135,0]

(*** 91 ***) Depth: 91
(*** 91 ***) Plan size: 45
(*** 91 ***) Selecting task to expand from agenda.
(ccc) Removing a task from agenda:
(ccc) New agenda:

(*** 91 ***) Selecting a candidate task.
(*** 91 ***) Found: 1 candidates (left).
      [0] :action (:inline)
(*** 91 ***) Solving action:
(:inline () ())
(*** 91 ***) working in action:
(:inline () ())

(*** 91 ***) No preconditions.
(ccc) Creating new agenda:

:action (add-destination-counter) start: 05/06/2007 08:00:00 end: 05/06/2007 08:00:00
:action (refuel a1 sevilla) start: 05/06/2007 08:00:00 end: 12/07/2007 20:00:00
:action (zoom a1 sevilla almeria) start: 12/07/2007 20:00:00 end: 13/07/2007 16:00:00
:action (board p1 a1 almeria) start: 13/07/2007 16:00:00 end: 13/07/2007 17:00:00
:action (board p2 a1 almeria) start: 13/07/2007 17:00:00 end: 13/07/2007 18:00:00
:action (refuel a2 madrid) start: 13/07/2007 18:00:00 end: 20/08/2007 06:00:00
:action (zoom a2 madrid almeria) start: 20/08/2007 06:00:00 end: 21/08/2007 09:00:00
:action (board p3 a2 almeria) start: 21/08/2007 09:00:00 end: 21/08/2007 10:00:00
:action (refuel a1 almeria) start: 21/08/2007 10:00:00 end: 24/09/2007 14:00:00
:action (zoom a1 almeria granada) start: 24/09/2007 14:00:00 end: 24/09/2007 22:00:00
:action (debark p1 a1 granada) start: 24/09/2007 22:00:00 end: 24/09/2007 23:00:00
:action (destino-done p1 granada) start: 24/09/2007 23:00:00 end: 24/09/2007 23:00:00
:action (refuel a2 almeria) start: 24/09/2007 23:00:00 end: 09/11/2007 12:00:00
:action (zoom a2 almeria sevilla) start: 09/11/2007 12:00:00 end: 10/11/2007 08:00:00
:action (debark p3 a2 sevilla) start: 10/11/2007 08:00:00 end: 10/11/2007 09:00:00
:action (destino-done p3 sevilla) start: 10/11/2007 09:00:00 end: 10/11/2007 09:00:00
:action (fly a1 granada sevilla) start: 10/11/2007 09:00:00 end: 11/11/2007 10:00:00
:action (debark p2 a1 sevilla) start: 11/11/2007 10:00:00 end: 11/11/2007 11:00:00
:action (destino-done p2 sevilla) start: 11/11/2007 11:00:00 end: 11/11/2007 11:00:00
Number of actions: 19 (46)
Expansions: 45
Generated nodes: 91
Inferences: 0
Time in seconds: 1.96
Real Time: 2.11337
Used Time: 0.76
System Time: 1.2
